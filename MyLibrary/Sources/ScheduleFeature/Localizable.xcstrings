{
  "sourceLanguage" : "en",
  "strings" : {
    "" : {
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : ""
          }
        }
      }
    },
    "- iOS and Flutter engineer in Japan\n- Working in DeNA Co., Ltd.\n- Often participate in [Japan-\\\\(region).swift](https://japan-region-swift.github.io/Japan-region-swift/) events in Japan.\n- Spoke at conferences in Japan such as [iOSDC](https://iosdc.jp/2024/) from 2022 to 2024 and [FlutterKaigi2024](https://youtu.be/UwDqyVawLtA?si=E0kN98o9CdM_p8e6).\n- I like cooking, fish, Japanese food, and pineapples." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "- 日本でiOSとFlutterのエンジニアをしています。\n- 株式会社ディー・エヌ・エーに勤務。\n- 日本で開催される[Japan-\\\\(region).swift](https://japan-region-swift.github.io/Japan-region-swift/)のイベントに頻繁に参加。\n- 2022年から2024年にかけて[iOSDC](https://iosdc.jp/2024/)や[FlutterKaigi2024](https://youtu.be/UwDqyVawLtA?si=E0kN98o9CdM_p8e6)など、日本のカンファレンスで登壇。\n- 料理、魚、和食、パイナップルが好き。"
          }
        }
      }
    },
    "\"Hmm, something looks off...\"\n\"Hmm, this interaction is broken...\"\n\nIf you've built UI with SwiftUI, you've probably encountered these issues more often than you'd like. In many cases, the solution involves wrapping UIKit to work around the problem.\n\nIn this lightning talk, I'll discuss when to use SwiftUI and when to rely on UIKit, breaking it down into eight common patterns." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "「あれ、なんか表示がおかしいぞ」「あれ、なんかインタラクションが壊れているぞ」\n\nSwiftUIでUIを構築していると上記の課題に遭遇することが稀によくあります。その場合はUIKitをラップして問題を解決することが多いと思います。\nこのLTでは、どういう時にどちらのフレームワークを使うのかについて8つのパターンに分けてお話しします。"
          }
        }
      }
    },
    "⚡️ EXIT 8 for SwiftUI" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "⚡️ SwiftUIの8番出口"
          }
        }
      }
    },
    "⚡️ Exploring SwiftUI Path Animations featuring Japan Symbol Quiz" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "⚡️ Japan Symbol QuizによるSwiftUIのPathアニメーションの探求"
          }
        }
      }
    },
    "⚡️ Graph Art with Charts API – Beyond Data Visualization" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "⚡️ Charts APIで作るグラフアート – データビジュアライゼーションを超えて\n"
          }
        }
      }
    },
    "⚡️ I Built an App for NeXTSTEP or: How I Learned to Stop Worrying and Love Objective-C" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "⚡️ NeXTSTEP向けアプリを作った話 ― Objective-Cを恐れるのをやめ、愛するようになった理由\n"
          }
        }
      }
    },
    "⚡️ Let’s Try Making Things Move with Swift!" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "⚡️ Swiftで物を動かしてみよう!"
          }
        }
      }
    },
    "⚡️ Spice up your notifications" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "⚡️ 通知に彩りを加えよう"
          }
        }
      }
    },
    "⚡️ Swift × Android: How Skip is Shaping the Future of Cross-Platform Development" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "⚡️ Swift × Android: Skipが切り拓くクロスプラットフォーム開発の未来\n"
          }
        }
      }
    },
    "⚡️ What I Did to Shut Down a Personally Developed App with Over 400K Downloads" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "⚡️ 40万以上DLされた個人開発アプリをサービス終了するためにしたこと"
          }
        }
      }
    },
    "⚡️ Write iOS Game Once and Play in Any Way" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "⚡️ 一度作れば、どんな入力でもプレイ可能なiOSゲーム\n\n"
          }
        }
      }
    },
    "A brief overview of how to write modern UI applications on Windows taking advantage of recent technologies. This assumes that the developer is not familiar with Windows development. By drawing parallels between the macOS and Windows worlds, it aims to show how Windows UI application development can be familiar and easy with Swift." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "最近の技術を活用してWindowsでモダンなUIアプリケーションを書く方法の概要を紹介します。この文章は、開発者がWindows開発に慣れていないことを前提としています。macOSとWindowsの世界との類似点を描きながら、Swiftを使ってWindows UIアプリケーション開発が親しみやすく、簡単になることを示すことを目指しています。"
          }
        }
      }
    },
    "Advanced Software Engineer at Garmin. 10 years of iOS development experience since college. Love solving the LeetCode problems with Swift." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Garminのアドバンストソフトウェアエンジニアです。\n大学時代からiOS開発に取り組み、10年以上の経験があります。\nSwiftを使ってLeetCodeの問題を解くのが好きです。"
          }
        }
      }
    },
    "After a year of developing an editor component with the TextKit 2 framework, I gained knowledge of best practices and techniques. I am thrilled to share my experience and insights." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "TextKit 2フレームワークを使ってエディターコンポーネントを1年間開発した経験から、最適な方法やテクニックを学びました。その知識やノウハウを皆さんとシェアできることをとても楽しみにしています。"
          }
        }
      }
    },
    "After transitioning to remote work several years ago, I found myself spending most of my time at home. However, I wanted to ensure I maintained a healthy lifestyle by aiming for 10,000 steps per day. To easily track my daily steps without the need for an app store, I developed a personal app for myself.\n\nInitially, I experimented with an iOS app using Swift Charts. However, as updates to the operating system rolled out, I found that I rarely used the app. Instead, with the convenience of the Apple Watch widget, I seamlessly transitioned to tracking my steps directly from my wrist. I'll discuss the logical progression of how I continuously refined the app for personal use, adapting it to evolving OS features, and how it positively impacted my daily routine." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "在宅ワークが始まって早数年。\nほぼ家にいるが、健康のためにも1日1万歩の歩数を確保したい。\nそこで、ストアにもあげず、ただただ自分が今何歩歩いているかを気軽に知るために自分専用のアプリを開発して使っています。\nSwift Chartsを使ってみたiOSのアプリは結局開かなくなったり、\nWatchOSのWidgetで直接歩数を見れるようになったのでWatchのWidgetで見るようにしたりとOSのアップデートと共に自分のためだけに改善していった様子とアプリを使ってからの生活環境の変化を話します。"
          }
        }
      }
    },
    "AI-Assisted Swift in Gamifying an iOS App" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "AI支援のSwiftによるiOSアプリのゲーミフィケーション\n"
          }
        }
      }
    },
    "Akimu is an iOS software developer at LY Corporation. He is working on the chat related features of LINE app. In his free time, he is a developer of simutrans OTRP, a Japanese fork of Simutrans, an open source transport simulator written in C++. He is a scholarship winner of WWDC18 from Japan." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "株式会社LINEヤフーのiOS developer。LINEアプリのチャット関連機能を開発中。C++で書かれたオープンソースのトランスポートシミュレータ、Simutransの日本語フォークであるsimutrans OTRPの開発者。WWDC18日本代表。"
          }
        }
      }
    },
    "App Art: Great App Design Done Quick" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "素早く実現する優れたアプリデザイン\n\n"
          }
        }
      }
    },
    "Apple Vision Pro new interface based on hand tracking" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Apple Vision Pro: ハンドトラッキングを基盤とした新インターフェース\n"
          }
        }
      }
    },
    "As a software engineer, I divide my time between working on client applications, backend services, and occasionally indulging in watching cat videos and photos. I have led engineering teams and cats to deliver user-facing products with a special focus on usability, customer satisfaction, and meowing." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "ソフトウェアエンジニアとして、クライアントアプリやバックエンドサービスの開発に携わる一方で、時々猫の動画や写真を観て楽しんでいます。エンジニアチームと猫を率いて、ユーザー向けプロダクトの開発をリードしてきました。特に、使いやすさ、顧客満足、そして“ニャー”を大切にしています。"
          }
        }
      }
    },
    "As most people tend to use cloud sync services to store relevant content, we will explore File Provider framework on both iOS and macOS and all the related features: Finder and Files app integration, remote synchronisation with upload and downloads.  So let’s explore how it works on both iOS and macOS and how you can sync, upload and download files on these platforms." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "多くの人が関連するコンテンツを保存するためにクラウド同期サービスを使用するようになった今、iOSとmacOSの両方でファイルプロバイダフレームワークと、Finderやファイルアプリ統合、リモート同期やアップロード、ダウンロードなどの関連機能を探索します。iOSとmacOSの両方でどのように機能し、これらのプラットフォームでファイルを同期、アップロード、ダウンロードするかを見ていきましょう。"
          }
        }
      }
    },
    "Audrey discovered iOS when she first bought an iPhone Edge in 2008. Since then, she is working passionately on Apple platforms, enjoying SwiftUI and even CoreData while building the macOS Proton Drive app. When she is not coding, watching/playing basketball and football are her favorite activities.\nAs a huge movie addict, Audrey is avoiding trailers as much as possible." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "オードリーは2008年に初めてiPhone Edgeを購入したときにiOSに出会った。それ以来、彼女はアップルのプラットフォームに情熱的に取り組んでおり、macOS Proton Driveアプリを作りながらSwiftUIやCoreDataを楽しんでいる。コーディングをしていないときは、バスケットボールとフットボールを観戦するのが好き。\n大の映画ファンであるオードリーは、できるだけ予告編を見ないようにしている。"
          }
        }
      }
    },
    "Automation for App Localization" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "アプリローカライゼーションの自動化"
          }
        }
      }
    },
    "Belongs to Cyber AI Productions. XR Expert at Cyber Agent.\nResponsible for system development related to XR and studio shooting.\nPurchased Apple Vision Pro locally on its U.S. release day. Actively engaged in development and research, including the visionOS 30 Days project.\nOrganizer of the visionOS Engineer Meetup. Published a book on visionOS app development.\nHas spoken at iOSDC for nine consecutive years, as well as at try! Swift Tokyo, XR Kaigi, Let's visionOS, AWE USA, and more.\nMainly shares updates on X, so please follow!" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Cyber AI Productions所属。XR Expert at Cyber Agent。\nXR関連とスタジオ撮影関連のシステム開発を担当。\nApple Vision Proを米国発売日に現地購入。visionOS 30 Days開発など精力的に実装と調査をしています。\nvisionOS Engineer Meetup主催。visionOSアプリ開発の書籍出版。\niOSDC9年連続登壇の他、try! Swift Tokyo、XR Kaigi、Let's visionOS、AWE USAなど登壇あり。\nXを中心に発信しているのでフォローしてください。"
          }
        }
      }
    },
    "Big Little Wins for You or Your App" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "塵も積もればアプリとなる"
          }
        }
      }
    },
    "Binary size is one of the critical metrics to improve the app experience. There are a bunch of approaches to optimize program size and Swift provides some of them including Swift-specific one. This talk gives you an overview of well-known optimizations and how to write size-friendly Swift code." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "アプリの体験を向上させる上で、バイナリサイズは重要な指標の一つです。プログラムサイズを最適化するためのさまざまな方法があり、SwiftにはSwift特有の方法も含めていくつかの方法が提供されています。この講演では、よく知られた最適化の概要と、サイズに優しいSwiftコードの書き方について紹介します。"
          }
        }
      }
    },
    "Brandon and Stephen, maintainers of the Composable Architecture, will give a broad overview of the library and demonstrate its core tenets: concise domain modeling with value types, composition of features, dependency management, and testability. We will do this by building a very simple application from scratch, and increasingly adding on more complex features." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Composable ArchitectureのメンテナーであるBrandonとStephenが、ライブラリの概要を説明し、そのコアとなる考え方、例えば、値型による簡潔なドメインモデリング、機能の組み合わせ、依存関係の管理、テスト容易性などを実演します。非常にシンプルなアプリケーションをゼロから構築し、より複雑な機能を追加していきます。"
          }
        }
      }
    },
    "Brandon spent a long time doing mathematics, but now likes to teach programming with a nod towards math. He co-hosts a video series called Point-Free, which focuses on the Swift language and how to best make use of its type system and features." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Brandonは長い間数学に携わっていましたが、現在は数学に傾倒しながらプログラミングを教えるのが好きです。彼は、Swift言語とその型システムと機能を最大限に活用する方法に焦点を当てたPoint-Freeというビデオシリーズを共催しています。"
          }
        }
      }
    },
    "Break" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "休憩"
          }
        }
      }
    },
    "Bring life to your iOS Application with 3D content using RealityKit" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "RealityKitでiOSアプリに命を吹き込む\n"
          }
        }
      }
    },
    "Bring your breakfast and meet other attendees or sponsors." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "朝食を持ち寄って、他の参加者やスポンサーと楽しみましょう"
          }
        }
      }
    },
    "Build your next website with Swift" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Swiftで次世代のウェブサイトを構築しよう"
          }
        }
      }
    },
    "Building a Smaller App Binary" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "小さなアプリバイナリを構築する"
          }
        }
      }
    },
    "Building Apps for visionOS with Swift" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "SwiftでvisionOSのアプリをつくろう"
          }
        }
      }
    },
    "Capturing Immersive Videos of J1 Pro Soccer Team FC Machida Zelvia: Building a Swift Viewer and Hosting a Hands-On Session" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "J1プロサッカーチームFC町田ゼルビアのImmersive動画を撮影しSwiftでViewerを実装し体験会実施した"
          }
        }
      }
    },
    "Chris is an independent iOS app developer based out of Nara, Japan (originally from USA). Before going indie in 2018, he was a software engineer at various tech companies for about 10 years, mostly in the security space.\nChris is best known for his two apps in the area of Japanese language learning, Nihongo and Nihongo Lessons. Nihongo is a Japanese dictionary and study tool that’s made for learning from the words you’re encountering in real life. Nihongo Lessons is a companion app for learning Japanese, based on the work of Adam Shapiro and his Japanese Level Up learning program.\nChris loves learning languages, and loves helping people to learn languages. He’s also an avid gamer, hiker, and dad to an amazing 7 year old." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "クリスは奈良を拠点に活動するフリーランスのiOSアプリ開発者。2018年に独立する前は、様々なテック企業でソフトウェアエンジニアとして約10年間、主にセキュリティ分野で活躍していた。クリスは、日本語学習分野の2つのアプリ「にほんご」と「にほんごレッスン」で最もよく知られている。Nihongoは日本語辞書と学習ツールで、実生活で遭遇する言葉から学ぶために作られている。Nihongo Lessonsは、Adam Shapiro氏の日本語学習プログラムJapanese Level Upをベースにした、日本語学習のためのアプリです。\nクリスは言語学習が大好きで、人々の言語学習を手助けすることも大好きです。彼はまた、熱心なゲーマーであり、ハイカーであり、7歳の素晴らしい子供の父親でもある。"
          }
        }
      }
    },
    "Closing" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "クロージング"
          }
        }
      }
    },
    "Cocoa Developer and Teacher. Love technology and cars. Working in the automotive software industry. Living in Tokyo.\nCompany: Woven by Toyota - This talk is not affiliated with my employer in any way.\nGitHub: [@jeffreybergier](https://github.com/jeffreybergier)\nMastodon: [@jeff](https://jeffburg.social/@jeff)" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Cocoa Developer & Teacher として活動しています。\nテクノロジーと車が大好きで、現在は自動車ソフトウェア業界で働いています（勤務地：東京）。\n\n所属：Woven by Toyota（本講演は所属企業とは関係ありません）\nGitHub：[@jeffreybergier](https://github.com/jeffreybergier)\nMastodon：[@jeff](https://jeffburg.social/@jeff)"
          }
        }
      }
    },
    "Code Signing - Have Fun and Take Control" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "コード署名を楽しく乗り切る方法"
          }
        }
      }
    },
    "Combine Vision Pro (visionOS) with Generative AI to instantly transform text prompts into 3D objects in real-time. Discover how Swift and cutting-edge AI come together to create immersive user experiences beyond the boundaries of traditional apps." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Vision Pro (visionOS) と生成型AIを組み合わせることで、テキストプロンプトをリアルタイムで瞬時に3Dオブジェクトへ変換します。\nSwiftと最先端のAI技術が融合し、従来のアプリケーションの枠を超えた没入型ユーザー体験を実現する方法をご紹介します。"
          }
        }
      }
    },
    "Creating Retro-Style Photos Using Swift" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "何が写真をレトロたらしめるのか、Swiftを用いたその実現方法"
          }
        }
      }
    },
    "Cultivating a Sense for Designing Great Applications" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "良いアプリケーションをデザインするための感覚の持ち方"
          }
        }
      }
    },
    "Day 1" : {
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "１日目"
          }
        }
      }
    },
    "Day 2" : {
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "２日目"
          }
        }
      }
    },
    "Day 3" : {
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "３日目"
          }
        }
      }
    },
    "Days" : {
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Days"
          }
        }
      }
    },
    "Designing Modular Data Pipeline" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "モジュラーなデータパイプライン設計"
          }
        }
      }
    },
    "Download Eventbrite app and show QR code of your ticket at the reception. You will receive a name tag and a goodie bag." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Eventbriteアプリをダウンロードして、受付でQRコードを見せてください。ネームプレートやカンファレンスバッグを受け取りましょう！"
          }
        }
      }
    },
    "Download Luma app and show QR code of your ticket at the reception. You will receive a name tag and a goodie bag." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Lumaアプリをダウンロードし、受付でチケットのQRコードを提示してください。ネームタグとお楽​​しみ袋がプレゼントされます。"
          }
        }
      }
    },
    "Drive Through File Provider" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "File Providerを通じたクラウド同期"
          }
        }
      }
    },
    "Emad is a Mobile Lead and Solution Architect at Visma Acubiz in Denmark and he is always eager to learn new topics. When he’s not in front of a computer he is usually playing board games" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "EmadはデンマークのVisma Acubizのモバイル・リード兼ソリューション・アーキテクトで、常に新しいトピックを学ぶことに熱心である。コンピュータの前にいないときは、たいていボードゲームをしている。"
          }
        }
      }
    },
    "Enhancing Applications with the Accessibility API" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Accessibility APIを使ってアプリケーションを拡張する"
          }
        }
      }
    },
    "Escaped big-tech to build photography and video apps. Credits: Halide, Kino and Spectre." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "大手テック企業を離れ、写真や動画アプリの開発に専念。代表作：Halide、Kino、Spectre。"
          }
        }
      }
    },
    "Ever wondered about simulations of how weather changes or viruses spread in the air? These simulations are built with simple calculations—just addition, subtraction, multiplication, and division! In this talk, we'll use Swift to create a simple simulation and show you how easy it is!" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "天候の変化やウイルスが空気中に広がる様子のシミュレーションを想像したことはありますか？\nこれらのシミュレーションは、足し算、引き算、掛け算、割り算といったシンプルな計算で構築されています！\n本セッションでは、Swiftを使ってシンプルなシミュレーションを実際に作成し、その簡単さを実演します。"
          }
        }
      }
    },
    "Every year at WWDC Apple introduces lots of cool new APIs! But most of these new APIs also come with quite a gatekeeper: they can only be used on the latest version of iOS...\n\nBecause of that, a lot of useful APIs fail to reach a strong adoption, and by the time their version of iOS has become mainstream they've been completely overlooked.\n\nSo how about we fix that?" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "WWDCで毎年、Appleは数多くの魅力的な新APIを発表しています！\nしかし、これらの新APIの多くは、実は大きなハードルが伴っており、最新のiOSでのみ利用可能なのです……\n\nその結果、有用なAPIが十分に普及する前に、対象となるiOSのバージョンが一般に広まる頃には、すでに完全に見過ごされてしまっています。\n\nでは、これを改善してみませんか？"
          }
        }
      }
    },
    "Everyone knows that animations are an easy way to add a touch of surprise and delight to your apps, but with SwiftUI we can add fine-grained effects to individual characters – we can literally animate letters one by one to bring our UI to life in ways that were impossible before iOS 18.\n\nIn this talk I'll demonstrate how to use SwiftUI's TextRenderer protocol to build a range of effects that help bring your UI to life in fun, engaging ways." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "誰もがアニメーションがアプリに驚きと喜びを加える簡単な方法だと知っていますが、SwiftUIでは個々の文字に細かな効果を付与することが可能です。\n実際、iOS 18以前では不可能だった、文字を一つずつアニメーションさせることでUIに命を吹き込む表現が実現できます。\n\nこのトークでは、SwiftUIのTextRendererプロトコルを活用して、UIを楽しく魅力的に演出する多彩なエフェクトの作り方をご紹介します。"
          }
        }
      }
    },
    "Foreign Function and Memory APIs and Swift/Java interoperability" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Foreign FunctionとMemory APIとSwift/Java相互運用性"
          }
        }
      }
    },
    "Getting started with controlling LEGO using Swift" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Swiftでレゴを動かそう！"
          }
        }
      }
    },
    "Getting Started with Vapor" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Vaporを始めよう"
          }
        }
      }
    },
    "Getting to Know TextKit" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "TextKitの理解を深めよう"
          }
        }
      }
    },
    "giginet works at LY Corp to improve Developer Experience for LINE. He also contributes some open-sourced developer tools like fastlane, Carthage, XcodeGen, and so on." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "LINEヤフー社でLINEのデベロッパーエクスペリエンス向上に従事。また、fastlane, Carthage, XcodeGenなどのオープンソース開発ツールにも貢献している。"
          }
        }
      }
    },
    "Group Photo" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "写真撮影"
          }
        }
      }
    },
    "Gui Rambo is a Mac developer and security researcher from Brazil, known for apps such as AirBuddy and VirtualBuddy." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Gui Ramboはブラジル出身のMac開発者兼セキュリティ研究者で、AirBuddyやVirtualBuddyといったアプリで知られています。"
          }
        }
      }
    },
    "Have you ever built a socket communication app? The sense of accomplishment when you delve into layers that aren't typically touched in your everyday app development and actually utilize them in an app is truly exceptional. However, creating a socket communication app requires knowledge of POSIX sockets, and for complex communications, you need to implement parallel processing.\nIn this talk, we'll implement socket communication and parallel processing in Swift. With Swift, which we're all familiar with, you can easily venture into unfamiliar territories, and there are several instances where you can leverage Swift's capabilities through implementing socket communication and parallel processing. Take this opportunity to enjoy learning socket communication and rediscover the charm of Swift!" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "皆さんはソケット通信アプリを作ったことはありますか？普段のアプリ開発では触らないレイヤーを学びアプリとして実際に使った時の達成感は格別です。しかしソケット通信アプリにはPOSIXソケットの知識が必要で、複雑な通信を行うなら並列処理を前提とした実装も必要です。\n本トークではSwiftでソケット通信と並列処理を実装します。私たちが使い慣れているSwiftであれば慣れない分野にも気軽に挑戦できますし、ソケット通信や並列処理の実装でSwiftの機能を活かせる場面がいくつかあります。この機会にソケット通信を楽しく学びSwiftの魅力を再発見してください！"
          }
        }
      }
    },
    "Have you ever pondered why '1 + 1 = 2' in Swift? Join me as I unveil the intriguing journey behind this seemingly simple arithmetic operation, delving into Swift's inner workings, including its source code, LLVM, and assembly language. This talk offers a deep dive into the concealed mechanics behind everyday code!" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Swiftでの「1 + 1 = 2」の計算方法について考えたことはありますか？私のトークでは、単純な足し算からSwiftの内部機能まで、SwiftのソースコードやLLVM、アセンブリ言語を含めた興味深い旅路を明らかにします。日常のコードの隠れたメカニクスに深く入り込んだ内容ですので、ぜひご参加ください！"
          }
        }
      }
    },
    "He has been passionate about programming since his childhood and has experience in various programming languages. Ever since discovering Swift, he has been extremely enthusiastic about it.He particularly enjoys writing code that utilizes type systems.\nAs he believes Swift has applications beyond just iOS apps, he also uses Swift on the server side for his regular work. He considers the major appeal of server-side work to be the ability to utilize the latest language features without having to wait for end-users to upgrade their devices.\nHe is deeply interested in Swift as a language and has read almost all of the Swift Evolution proposals from the draft stage. He is also interested in compiler code, and regularly monitors the pull requests to the repository. For his past contributions, he has been recognized as a committer.\nHe runs a study group about the Swift compiler and presents about various topics. Additionally, he's managing a Discord server for discussions about Swift." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "子供の頃からプログラミングが好きで、様々な言語に触れてきた。\nSwiftに出会ってからはこれに夢中だ。\n特に型システムを活かしたコードを書く事を楽しんでいる。\n\nSwiftが適用可能な領域はiOSアプリにとどまらないと考えていて、\n普段の仕事ではサーバサイドにもSwiftを導入している。\nサーバサイドではユーザーの端末のバージョンアップを待つ必要がないので、\n最新の言語機能が使える事が大きな魅力だと考えている。\n\nSwiftの言語としての側面に興味があり、Swift Evolutionのプロポーザルはドラフトの段階からほぼ全て読んでいる。\nコンパイラのコードにも興味があり、リポジトリへのプルリクエストを定期的にチェックしている。\n過去にコントリビュートした際にコミッターに認定されている。\n\nSwiftコンパイラについての勉強会を運営していて、様々なトピックについて発表をしている。\nまた、Swiftについて会話するDiscordサーバの管理運営もしている。"
          }
        }
      }
    },
    "He is a software engineer and works on improvements of DevOps and DevEx in various teams. He also contributes some open-sourced swift projects." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "ソフトウェアエンジニアとして、さまざまなチームでDevOpsやDevExの改善に取り組んでいる。また、オープンソース化されたswiftプロジェクトにも貢献している。"
          }
        }
      }
    },
    "He was fascinated by the smooth and beautiful UI of Mac OS X and started working with Cocoa to create it by himself. After working as a commercial iOS developer, he now works as a software designer and architect, aiming to create beautiful software with smooth UI. He is also a member of \"macOS native\" community organizers." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "かつてMac OS Xのなめらかで美しいUIに憧れ、それを自らの手で作るためにCocoaに入門。商業iOSデベロッパーを経て、現在はソフトウェアデザイナー兼アーキテクトとして、なめらかなUIを備えた美しいソフトウェアの実現を志している。Macとネイティブアプリケーションをこよなく愛す。macOS native運営コアメンバー。"
          }
        }
      }
    },
    "HelloSwift.EXE: Writing a Windows Application as a non-Windows Developer" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "HelloSwift.EXE: Windows開発者じゃなくてもWindowsアプリケーションを書いてみよう"
          }
        }
      }
    },
    "Hi, I'm Andrew coming from San Francisco! and I like making apps. This is my second time in Japan, excited to be here. よろしくお願いします！" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "こんにちは！サンフランシスコ出身のAndrewです。アプリを作るのが好きです。今回で日本に来るのは2回目ですが、また来られてとても嬉しいです。よろしくお願いします！"
          }
        }
      }
    },
    "Hiromu is a member of Rakuten Group, Inc. and is involved in the development of Rakuten Rakuma as an iOS engineer and tech lead." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "楽天グループ株式会社に所属。iOSエンジニア、テックリードとして楽天ラクマの開発に携わる。\n"
          }
        }
      }
    },
    "Hisaki joined Konami Digital Entertainment and was involved in the online implementation of Winning Eleven for 5 years, developed and operated apps as an engineer at COLOPL for 9 years, developed AR games using location information and AR, and VR games such as OculusRift and PSVR After his experience in development, he joined MESON. He is developing SunnyTune, a launch title for VisionPro at MESON." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "株式会社コナミデジタルエンタテインメントに入社し5年間ウイニングイレブンのオンライン実装に携わる。\nその後、株式会社コロプラで9年間エンジニアとしてアプリ開発・運用を行い、位置情報やARを使用したARゲーム開発、OculusRiftやPSVRなどのVRゲーム開発を経験しMESONへ入社。\nMESONではVisionPro向けローンチタイトルのSunnyTuneを開発。"
          }
        }
      }
    },
    "I am an engineer/developer specializing in iOS and visionOS. I have created numerous personal apps, including \"Large Contacts\" for iOS and \"Good Sleeper 360\" for visionOS. I've authored several technical books, such as Slack & Zoom & Trello Basics + Tips for Telework (in the できるfit series) and What We Wanted to Know About Alexa, and more recently, The Path to Becoming a visionOS Developer. I have received many accolades, including the Mashup Award and top honors in contests organized by Japan's Ministry of Internal Affairs and Communications, as well as multiple awards in SPAJAM and other hackathons. I have spoken at various events like JAWS Festa and Alexa Day, and I currently share insights on visionOS through social media." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "iOSとvisionOSを専門とするエンジニア・開発者です。個人で多数のアプリを開発しており、iOS向けの「Large Contacts」やvisionOS向けの「Good Sleeper 360」などをリリースしています。\nまた、技術書の執筆も手がけており、「Slack & Zoom & Trello 基本+活用術（できるfitシリーズ）」や「Alexaに聞きたかったこと」、最近では「visionOS開発者への道」などを出版しています。\n受賞歴も多数あり、Mashup Awardや総務省主催のコンテストでの最優秀賞、SPAJAMをはじめとするハッカソンでの受賞経験があります。\nまた、JAWS FestaやAlexa Dayなどのイベンで登壇経験があり、現在はvisionOSに関する知見をSNSで発信しています。"
          }
        }
      }
    },
    "I decided to shut down my personally developed app, WebCollector, which had over 400K downloads. In this talk, I'll share the steps I took to ensure a smooth closure.\n\nRather than simply shutting down the service, I took measures to help users properly save their data, provided clear announcements, and disclosed the process to close the app gradually.\n\nI'll also reflect on the importance of planning for app closure when running a Firebase-powered personal project." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "40万以上DLされた個人開発アプリ「WebCollector」を終了すると決めたので、そのために実施したことについてお話しします。\n単にサービスを停止するのではなく、ユーザーがデータを適切に保存できるよう配慮したり、お知らせを掲載し、プロセスを開示することで段階的にクローズするように配慮しました。\nFirebaseを活用した個人開発アプリの運営において、クローズを意識する重要性を考えさせられた経験についてもお話しします。"
          }
        }
      }
    },
    "I develop iOS apps at DeNA Co., Ltd. My native language is Swift." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "株式会社ディー・エヌ・エーで iOS アプリを開発しています。Swiftが母国語です。"
          }
        }
      }
    },
    "I have completed more than a decade long experience in the field of futuristic developments and managed to gain a  portfolio of local and international clientele while working with prominent corporate entities in Sri Lanka.\n\nCurrently serving as the Chief Technology Officer for Fixel Digital which is a development house specifically for Mobile application developments . it's a pleasure that I am well known for my Punctuality, Attention to detail, and innovative mindset among the clients and the industry that I am being with\n\nI have started iOS Development in its early development stage in 2011. I have been in the apple ecosystem for more than a decade now, also Delivered more than 55+ Apps, including iOS, macOS, tvOS, and watchOS. At the same time, I am serving my knowledge to Students in the IT industry and providing consultation services to my clients from overseas." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "未来志向の開発に10年以上携わり、国内外の企業と協力しながら幅広いクライアントのポートフォリオを築いてきました。\n\n現在はFixel Digitalの最高技術責任者（CTO）として、モバイルアプリ開発を専門とする開発チームを率いています。業界内では「時間厳守」「細部へのこだわり」「革新的な発想」で知られています。\n\niOS開発には2011年の初期の段階から携わっており、Appleのエコシステムで10年以上の経験を積んできました。これまでにiOS、macOS、tvOS、watchOS向けに55本以上のアプリを開発・リリースしてきました。また、IT業界の学生に知識を共有したり、海外クライアントへのコンサルティング業務も行っています。"
          }
        }
      }
    },
    "I like ramen." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "I like ramen."
          }
        }
      }
    },
    "I love beautiful movies, novels, photography and mobile apps!" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "美しい映画、小説、写真、モバイルアプリが好きです"
          }
        }
      }
    },
    "I usually develop iOS apps at LY Corporation and actively output through blogging and speaking engagements. Last year, I spoke 13 times." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "LY CorporationでiOSアプリを開発しています。ブログや登壇などのアウトプットにも積極的に取り組んでおり、昨年は13回の登壇を行いました。"
          }
        }
      }
    },
    "I will be presenting a fast, real time, infinite canvas user interface implementation using Metal, and will be exploring the use of Multi-channel Signed Distance Fields (MSDFs), for rendering text that looks beautiful and sharp at any zoom level or orientation." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Metalを活用した高速かつリアルタイムの無限キャンバス型ユーザーインターフェースの実装例を発表します。\nまた、どのズームレベルや向きでも美しくシャープに表示されるテキストをレンダリングするために、Multi-channel Signed Distance Fields（MSDF）の利用法について探求します。"
          }
        }
      }
    },
    "I write a simple iOS game app which only has the \"left\" and \"right\" action. But the exciting is that the user input can be in many way. You can choose slider, button, accelerometer, keyboard, and the new feature in iOS 18: eye tracking. So you also can use it to test any IO functionality you find." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "私は、\"左\"と\"右\"のアクションだけを持つシンプルなiOSゲームアプリを作りました。しかし、興味深いのはユーザー入力の方法が多様である点です。\nスライダー、ボタン、加速度センサー、キーボード、そしてiOS 18で新たに登場したアイ・トラッキングなど、様々な入力手段を選択できます。\nさらに、この仕組みを活用して、あらゆる入出力機能のテストにも利用することが可能です。"
          }
        }
      }
    },
    "I'm a New Zealander who has been living in Japan for the past 10 years. I primarily work with low level, real time graphics and audio. This year, I founded a company called kapsy.io, and am currently working on a real time generative music sequencer with the code named _Variations_." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "ニュージーランド出身で、日本に住んで10年になります。主に低レベルなリアルタイムのグラフィックスやオーディオを扱っています。\n今年、新しくkapsy.ioという会社を設立し、現在はリアルタイムで生成される音楽シーケンサーVariations（コードネーム）の開発を進めています。"
          }
        }
      }
    },
    "I'm an Individual developer.\n\nI've released a variety of apps for Apple platforms.\niOS & iPadOS: 7 apps\nvisionOS: 5 apps\nwatchOS: 5 apps\ntvOS: 1 app\nmacOS: 3 apps\n\nPortfolio link \n[flipbyblink.github.io/Portfolio](https://flipbyblink.github.io/Portfolio/)" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "個人開発者として、Appleプラットフォーム向けにさまざまなアプリをリリースしています。\niOS & iPadOS アプリ：7\nvisionOS アプリ：5\nwatchOS アプリ：5\ntvOS アプリ：1\nmacOS アプリ：3\n\nポートフォリオ：\n[flipbyblink.github.io/Portfolio](https://flipbyblink.github.io/Portfolio/)"
          }
        }
      }
    },
    "I'm an iOS and Android app developer working on a banking and card payment service at SmartBank." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "iOSおよびAndroidアプリ開発者として、SmartBankで銀行およびカード決済サービスの開発に携わっています。"
          }
        }
      }
    },
    "I'm Chris, also known as Halordain! I grew up in Dallas, Texas, and attended college at Stanford. I majored in electrical engineering with a specialization in image processing. I started studying Japanese to scout my opponents from Japan at the Pokémon World Championships, where my quarterfinals and semifinals opponents hailed from Yokosuka and Fujisawa, respectively.\n\nMy journey led me to Doshisha University to master Japanese under the Critical Language Scholarship. I abandoned my PhD at MIT CSAIL to pursue software development in Japan. Originally hired at Creatures Japan to process images for Pokémon cards, I ended up learning Objective-C to develop my first iPad app, [Pokédex for iOS (Creatures, 2012)](https://www.pokemon.co.jp/ex/pokedex/ja/).\n\nAfter Creatures, I contracted with Bandai-Namco Studios to build the graphics engine behind [Super Smash Bros. for 3DS](https://www.smashbros.com/wiiu-3ds/us/3ds/). I parlayed my rendering knowledge in computer graphics, my image processing background, and my interest in iOS development into developing iOS Photoshop for Adobe, and eventually joined Apple to document their new graphics technologies such as Metal, ARKit, CreateML, and RealityKit.\n\nI returned to Japan to help spearhead Nintendo of Japan's smartphone game design, starting with Fire Emblem Heroes and [Pikmin Bloom](https://pikminbloom.com/ja/). These development experiences led me to craft my own path creating educational apps and experiences for teaching Japanese kids about AI and Swift." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "こんにちは！Chris（Halordain）です！\nテキサス州ダラスで育ち、スタンフォード大学で電気工学（画像処理専攻）を学びました。ポケモン世界大会で日本の対戦相手をリサーチするために日本語の勉強を始め、準々決勝・準決勝では横須賀と藤沢出身のプレイヤーと対戦しました。\n\nその後、Critical Language Scholarshipを活用し、日本語を習得するために同志社大学へ留学。MIT CSAILの博士課程を辞め、日本でソフトウェア開発の道を選びました。\n最初の仕事はクリーチャーズでポケモンカードの画像処理を担当することでした。そこでは、Objective-Cを学び、初のiPadアプリ [ポケモン図鑑 for iOS (クリーチャーズ, 2012)](https://www.pokemon.co.jp/ex/pokedex/ja/) を開発しました。\n\nその後、バンダイナムコスタジオで [大乱闘スマッシュブラザーズ for 3DS](https://www.smashbros.com/wiiu-3ds/us/3ds/) のグラフィックスエンジンの開発に携わり、コンピュータグラフィックスと画像処理の知識を活かしてAdobeでiOS向けPhotoshopの開発を担当しました。さらに、AppleではMetal・ARKit・CreateML・RealityKitなどの新しいグラフィック技術のドキュメント作成を担当しました。\n\n日本に戻った後は任天堂のスマートフォンゲーム開発に携わり、「ファイアーエムブレム ヒーローズ」や [ピクミン ブルーム](https://pikminbloom.com/ja/) の開発を支援。現在は、AIやSwiftを子どもたちに教える教育アプリを開発しています。"
          }
        }
      }
    },
    "ikesyo is a Swift (corelibs-foundation) contributor. He was also the author or maintainer of projects such as Himotoki, Quick, Nimble, Carthage, and ReactiveSwift. He is currently developing various manga apps at Hatena Co., Ltd." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "ikesyoはSwift (corelibs-foundation)のコントリビューターである。Himotoki、Quick、Nimble、Carthage、ReactiveSwiftなどのプロジェクトの作者またはメンテナーでもある。現在は株式会社はてなで様々な漫画アプリを開発中。"
          }
        }
      }
    },
    "Immersive Video is a 180-degree video that appears three-dimensional. My team and I, along with several collaborators, captured an Immersive Video of FC Machida Zelvia—a professional soccer team in Japan's J1 League—and hosted a hands-on session exclusively for special members. This project was made possible through the club's support and cooperation. The event was a great success, and we encountered many challenges and learned a great deal through trial and error in the processes of filming, video editing, developing the Swift-based Viewer, and running the session. I'm especially eager to share the in-depth insights we gained from building the Viewer in Swift and the overall experience. It's rare to see professional sports filming projects and Immersive Video technology being showcased at developer conferences, and there are many fascinating insights to be shared from both the video capturing process and the Viewer application development." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Immersive Videoは立体的に見える180度動画です。\n私と複数人のチームで、サッカーJ1リーグ所属のFC町田ゼルビアのImmersive Videoを撮影し特別会員向けに体験会を実施しました。クラブ協力のもと実現できました。体験会は大成功。撮影、動画編集、Viewer実装、体験会、どれも試行錯誤があり多くの知見を得られました。特にSwiftで実装したViewerの作り込みと体験についての深掘りした知見を共有したいです。\nプロスポーツの撮影自体が開発者向けのカンファレンスで共有される事例が少ないですし、Immersive Video撮影、Viewerアプリも面白い知見が多数です。"
          }
        }
      }
    },
    "In a world increasingly dominated by Artificial Intelligence (AI), this presentation challenges the audience to consider an alternate future: one where AI is not the centrepiece of technological advancement. We delve into the implications of a future less reliant on AI, discussing the potential benefits and drawbacks. \n\nThe talk focuses on three key areas: human creativity and innovation, the preservation of traditional skills and knowledge, and the ethical considerations of a non-AI-centric world.\n\nFirstly, we explore how a reduced emphasis on AI could foster greater human creativity and innovation. Without AI's influence, there might be a resurgence in traditional problem-solving approaches and a renewed emphasis on human ingenuity.\n\nSecondly, the talk addresses the preservation of traditional skills and knowledge. In a world less dependent on AI, these skills might not only survive but thrive, leading to a more diverse technological landscape.\n\nFinally, we discuss the ethical implications of a world without pervasive AI. This includes considerations of privacy, employment, and societal structure, and how these might differ from a future where AI plays a central role." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "AIが支配する世界では、技術の未来をAI中心ではないものとして想像することは、一種の挑戦です。このプレゼンテーションでは、AIに頼らない未来がもたらすかもしれないメリットとデメリットを探ります。\n\n話は大きく三つの部分に分かれています。一つ目は、AIに頼らないことで人間の創造性やイノベーションがどう促進されるか。AIがなければ、昔ながらの問題解決法が復活し、人間のひらめきが再び重要視されるかもしれません。\n\n二つ目は、伝統的な技術や知識の保存について。AIに依存しない世界では、これらの技術がただ生き残るだけでなく、繁栄することで、技術の多様性が広がる可能性があります。\n\n最後に、あらゆる場所にAIがあるわけではない世界の倫理的な問題について考えます。プライバシー、雇用、社会構造に関する考え方が、AIが中心の未来とどう違うのかを見ていきます。"
          }
        }
      }
    },
    "In short, this is a story about hacking Genmoji.\nGenmoji can now be displayed in notifications from iOS18. In this talk, we will reverse engineer Genmoji and display custom emojis in notifications.\nI'm a third-party app developer for Mastodon. \nThis talk is perfect for me." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "簡単に言えば、これはジェン文字をハックする物語です。\niOS 18から、通知にジェン文字が表示されるようになりました。\nこのトークでは、ジェン文字のリバースエンジニアリングを行い、カスタム絵文字を通知に表示する方法をご紹介します。\n私はMastodon向けのサードパーティアプリ開発者ですが、この内容は私にとってまさに理想的なテーマです。"
          }
        }
      }
    },
    "In software design, it is crucial to focus on seamlessly integrating the platform's system with the creator's unique concept. Aiming for a harmonious and well-designed UI is a shortcut to creating software that is user-friendly and easy to use. This talk will focus on UI design for applications on macOS and iOS, discussing how creators can assert their uniqueness, adapt to the platform, and balance respect for cultural considerations." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "ソフトウェアのデザインでは、プラットフォームのシステムとクリエイター独自のコンセプトとが矛盾なく成り立つことに強く意識を向けなければなりません。調和の取れた良いUIを目指すことは、ユーザーにとって親しみやすく、使いやすいソフトウェアへの近道です。この講演では、macOSやiOSにおけるアプリケーションのUIデザインに焦点を当て、クリエイターがアプリケーションを設計する際の自らの独自性の主張方法、プラットフォームへの適合方法、および文化尊重との塩梅を考えます。"
          }
        }
      }
    },
    "In Swift, you can define identifiers not only in English but also in various natural languages.\n\nRecently, I released a Shogi app for all Apple platforms, including Apple Vision Pro. In this app, I wrote almost all identifiers in Japanese—except for reserved words and imported frameworks.\n\nIn this talk, I'll share insights from my experience with Swift programming using Japanese identifiers." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Swiftでは英語だけでなく様々な自然言語で識別子を定義することができます。\n私は最近、日本の伝統的ボードゲーム「将棋」のアプリをApple Vision Pro含む全てのAppleプラットフォーム向けにリリースしました。\nこのアプリでは「予約語」や「インポートしたフレームワーク」を除いたほぼ全ての識別子を日本語で書きました。\n今回は「日本語識別子Swiftプログラミング」の知見を紹介します。"
          }
        }
      }
    },
    "In this session, I'll share insights gained from a project to rewrite the game \"Simutrans\" in Swift, focusing on the practicality of C++ interoperability and the anticipated developments in the future. You'll learn how to leverage these insights to potentially challenge yourself with porting C++ projects to Swift." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "本セッションでは、SimutransというゲームをSwiftで書き換えるプロジェクトを通じて得た知見をもとに、C++ interoperabilityの実用性と今後期待される発展についてお話しします。皆さんも、このトークで学べることを活かして、C++プロジェクトのSwift書き換えにチャレンジしてみませんか？"
          }
        }
      }
    },
    "In this talk I'll show you how you can design your app data pipeline in a modular way, and integrate my open source tools to enable easy bug reproduction and faster development workflows." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "本セッションでは、アプリのデータパイプラインをモジュラーな方法で設計する手法を紹介します。さらに、私のオープンソースツールを統合することで、簡単なバグ再現と迅速な開発ワークフローを実現する方法を解説します。"
          }
        }
      }
    },
    "In this talk, we’ll explore Duolingo's efforts to build a virtual language tutor, using the latest AI technology. In 2023, Duolingo launched a new feature built on GPT-4 called Roleplay, to simulate the experience of realistic conversation practice in a foreign language. As an engineer behind the product, I'll discuss iOS-specific challenges, as well as common issues working with generative AI issues, such as latency optimization. The talk concludes with an interactive demo of the Roleplay feature, providing an inside look at how AI is transforming language learning." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "この講演では、最新のAI技術を使用して仮想言語チューターを構築するためのDuolingoの取り組みを探ります。2023年にDuolingoは、GPT-4を基盤とした新機能「Roleplay」を発表しました。これは、外国語でのリアルな会話練習体験をシミュレートすることを目的としています。製品開発に携わるエンジニアとして、iOS固有の課題や、生成AIを扱う際の一般的な問題点、例えばレイテンシの最適化などについて話します。講演は、Roleplay機能のインタラクティブなデモで締めくくられ、AIが言語学習をどのように変革しているかの内側を垣間見ることができます。"
          }
        }
      }
    },
    "In this workshop we will look at the Swift compilation process and what those parts are, learn a bit about LLVM, how to find a bug to work on using bugs.swift.org and then making a build with our changes and running tests.A merged pull request is not the goal of this workshop, but after attending this workshop you should have enough knowledge to get started and know where to look to learn more.\n\nIf you are proficient in C++ or even have some experience with LLVM, then you can start working with the Swift compiler right away.\n\nIf you do not have former C++ knowledge fear not, the Swift standard library or SwiftSyntax are written mostly in Swift and the python / swift hybrid '.gyb' files.\nIn addition, we’re welcome to contribute to any other Swift family projects, like Foundation, Swift Package Manager, or any other first-party libraries." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "このワークショップでは、Swiftのコンパイル過程とその部分について学びます。LLVMの基礎知識を少し学び、bugs.swift.orgを使って修正すべきバグを見つけ出し、変更を加えたビルドを作ってテストを行う方法についても扱います。このワークショップの目的はプルリクエストをマージすることではありませんが、参加後は始めるために必要な知識を身につけ、さらに学ぶべき方向性を理解できるようになるでしょう。\n\nもしC++が得意であるか、LLVMに関する経験が少しでもあれば、Swiftコンパイラの作業をすぐに開始できます。\n\nC++の経験がなくても大丈夫です。Swift標準ライブラリやSwiftSyntaxは主にSwiftで書かれており、PythonとSwiftのハイブリッドファイルである「.gyb」ファイルも存在します。また、Foundation、Swift Package Manager、その他のファーストパーティライブラリなど、Swiftファミリーのプロジェクトへの貢献も歓迎しています。"
          }
        }
      }
    },
    "In this workshop we'll walk through how Swift's new Observable system is revolutionizing the way we write SwiftUI code, then move on to explore how it's used inside the SwiftData framework make app storage easier than ever. Please come with the latest Xcode installed on your laptop, because this is a hands-on workshop and you'll be expected to write a lot of code." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "このワークショップでは、Swiftの新しいObservableシステムがSwiftUIのコードの書き方にどのような革命を起こしているのかを説明し、SwiftDataフレームワークの中でどのように使われているのかを探ることで、アプリのストレージをこれまで以上に簡単にします。これは実践的なワークショップであり、多くのコードを書くことが予想されるため、最新のXcodeをラップトップにインストールした状態でお越しください。"
          }
        }
      }
    },
    "In this workshop you'll learn everything you need to build a simple Vapor application. You'll learn how to create routes, saves models to a database and build REST APIs. This workshop is fully updated for async/await!" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "このワークショップでは、シンプルなVaporアプリケーションを構築するために必要なすべてを学びます。ルートを作成し、モデルをデータベースに保存し、REST APIを構築する方法を学びます。このワークショップはasync/awaitに完全に対応しています！"
          }
        }
      }
    },
    "In this workshop, we'll learn how to control Bluetooth Low Energy devices such as LEGO using Swift and Core Bluetooth.\n\nFirst, we'll deepen our understanding of controlling Bluetooth Low Energy (BLE) devices with Swift. After learning an overview of BLE and how to use Core Bluetooth, we will conduct a demonstration using the STAR WARS R2-D2 droid kit provided by littleBits.\n\nNext, we'll learn about the LEGO Wireless Protocol, which is the protocol for controlling LEGO via BLE. Finally, we'll utilize LEGO kits to create something that moves together.\n\nNote : Please note that the number of kits is limited, so if there are many participants, we'll form teams to conduct the workshop." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "このワークショップでは、SwiftとCore Bluetoothを使用してレゴなどのBluetooth Low Energyデバイスを動かす方法を学びます。\n\n最初に、SwiftでBluetooth Low Energy（BLE）機器を制御する方法について理解を深めていきます。BLEの概要とCore Bluetoothの使い方を学んだあとに、具体的なデモとして、littleBitsが提供するSTAR WARS R2-D2ドロイド・キットによるデモンストレーションをします。\n\n次に、BLEでレゴを制御するためのプロトコルであるLEGO Wireless Protocolについて学習します。最後に、レゴのキットを活用して、一緒に動くものを作ります。\n\n※キットの数には限りがあるため、参加者が多い場合はチームを組んでワークショップを行います。"
          }
        }
      }
    },
    "Introduction to security research and bounty hunting on Apple's platforms" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Appleプラットフォームにおけるセキュリティリサーチとバウンティハンティング入門"
          }
        }
      }
    },
    "iOS & visionOS app developer in Japan. Crafting 𝙫𝙚𝙖𝙧 and DAWN for mastodon. Loving #foxes.\n\n[vear - Anime Avatar Camera](https://apps.apple.com/jp/app/vear-anime-avatar-camera/id1490697369?l=en-US)\n[DAWN for Mastodon](https://apps.apple.com/jp/app/dawn-for-mastodon/id1668645019?l=en-US)" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "日本でiOSとvisionOSのアプリを開発しています。\nMastodon向けの𝙫𝙚𝙖𝙧やDAWNなどのアプリ開発を手がけています。\n#foxes（キツネ）が大好きです。\n\n[vear - Anime Avatar Camera](https://apps.apple.com/jp/app/vear-anime-avatar-camera/id1490697369?l=en-US)\n[DAWN - Mastodon クライアント](https://apps.apple.com/jp/app/dawn-for-mastodon/id1668645019?l=en-US)"
          }
        }
      }
    },
    "iOS app developer, creating personal projects like #Type, Quiz Match, and more.\nLiving in Tokorozawa, Saitama, in a renovated pre-owned apartment with my wife and two cats.\nPhotography enthusiast, traveling across Japan as a photographer for Japan-\\(region).swift." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "iOSアプリを作る仕事をしています。個人アプリとして#Type、Quiz Matchなどを開発しています。\n埼玉県所沢市で中古マンションを購入。リノベーションして2匹の猫、そして妻と住んでいます。\n趣味はカメラで、Japan-\\\\(region).swiftではカメラマンとして各地に飛んだりしています。"
          }
        }
      }
    },
    "Java's annotation processing leverages developer productivity by compile-time code generation. Swift can now replicate that innovation with Swift Macros and Swift Syntax. Learn how to express annotation-like features in Swift, automate code, and boost productivity. Let's unlock Swift's potential!" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Javaのアノテーションプロセッシングは、コンパイル時のコード生成によって開発者の生産性を大きく向上させています。\nSwiftも、Swift MacrosとSwift Syntaxを活用することで、この革新的な手法を再現できるようになりました。\nSwiftにおいて、アノテーションに似た機能をどのように表現し、コード自動生成で生産性を向上させるかを学び、Swiftの潜在能力を解き放ちましょう！"
          }
        }
      }
    },
    "Join us as we build a ChatGPT client, from scratch, using Swift OpenAPI Generator. We'll take advantage of Swift OpenAPI's pluggable HTTP transports to reuse the same generated client to make upstream calls from a Linux server, providing end-to-end streaming, backed by async sequences, without buffering upstream responses.\n\nIn this session you'll learn how to:\n\nGenerate a type-safe ChatGPT macOS client and use URLSession OpenAPI transport.\nStream LLM responses using Server Sent Events (SSE).\nBootstrap a Linux proxy server using the Vapor OpenAPI transport.\nUse the same generated ChatGPT client within the proxy by switching to the AsyncHTTPClient transport.\nEfficiently transform responses from SSE to JSON Lines, maintaining end-to-end streaming." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Swift OpenAPI Generatorを使って、ゼロからChatGPTクライアントを構築するライブコーディングに参加してください。\nSwift OpenAPIのプラガブルなHTTPトランスポート機能を活用し、生成された同一クライアントを再利用してLinuxサーバーから上流呼び出しを行います。これにより、非同期シーケンスに支えられたエンドツーエンドのストリーミングが、上流レスポンスをバッファリングすることなく実現できます。\n\nこのセッションでは、以下の内容を学びます:\n\n・タイプセーフなChatGPT macOSクライアントを生成し、URLSession OpenAPIトランスポートを使用する方法\n・サーバー送信イベント（SSE）を利用して、LLMのレスポンスをストリーミングする方法\n・Vapor OpenAPIトランスポートを用いて、Linuxプロキシサーバーをブートストラップする方法\n・AsyncHTTPClientトランスポートに切り替えることで、プロキシ内で同じ生成済みChatGPTクライアントを利用する方法\n・SSEからJSON Linesへのレスポンス変換を効率的に行い、エンドツーエンドのストリーミングを維持するテクニック"
          }
        }
      }
    },
    "Join us for a live recording of the popular podcast \"Swift over Coffee,\" where the latest Swift news and practical techniques are discussed. Hosted by Paul Hudson and Mikaela Caron, the show dives into new Swift features, community trends, and coding tips that prove invaluable in everyday development. In addition to the standard recording session, the event features a Q&A with the audience—offering a unique chance to hear exclusive behind-the-scenes stories and up-to-the-minute development insights. This is an ideal opportunity for Swift developers to catch up on cutting-edge trends and strengthen their ties within the community." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "最新の Swift ニュースや実用的なテクニックについて議論する人気のポッドキャスト「Swift over Coffee」のライブ録画に参加してください。ポール ハドソンとミカエラ キャロンが司会を務めるこの番組では、Swift の新しい機能、コミュニティのトレンド、日常の開発で非常に役立つコーディングのヒントについて詳しく説明します。このイベントでは、通常のレコーディング セッションに加えて、聴衆との Q&A も行われ、特別な舞台裏の話や開発に関する最新の洞察を聞くユニークな機会が提供されます。これは、Swift 開発者にとって最先端のトレンドを把握し、コミュニティ内の絆を強化する理想的な機会です。"
          }
        }
      }
    },
    "Katsumi has been developing software for the Apple platform for over 10 years and currently works for a company that develops low-code platforms. He works on automating all kinds of tasks. In his spare time, he builds and maintains various open source projects that improve developer productivity." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Apple Platformのソフトウェアを専門に開発しているソフトウェアエンジニアです。現在はローコードでアプリ開発するサービスを提供する会社で働いていて、あらゆる作業を自動化する仕事をしています。空いた時間には、デベロッパーの生産性を向上するさまざまなオープンソースプロジェクトをメンテナンスしています。"
          }
        }
      }
    },
    "Kazuhiro Kamakura works at LY corporation. He loves not only programming but also making things in general. In his spare time, he remodels houses." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "LINEヤフー株式会社勤務。プログラミングだけでなく、ものづくり全般が好き。趣味は家のリフォーム。"
          }
        }
      }
    },
    "Kazuya worked as a web engineer leader at Kayac, and then fell in love with 3DCG and VR, and moved to the VR team at COLOPL, where he worked as a lead engineer for the development of the VR game \"Nyoro The Snake & Seven Islands\" and experienced developing many VR games. After joining MESON, he worked as an XR engineer before becoming CTO." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "面白法人カヤックでWebエンジニアのリーダーを務めたのち3DCGおよびVRの魅力にハマり、その後コロプラの仮想現実チームに転籍。VRゲーム「Nyoro The Snake & Seven Islands」開発のリードエンジニアを務め、多数のVRゲーム開発を経験。MESONに入社後、XRエンジニアとして活動したのち、CTOに就任。"
          }
        }
      }
    },
    "Key" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "もくもく会"
          }
        }
      }
    },
    "Konrad works in the Swift language team at Apple, where he focuses on concurrency and distributed modules of the language, and server-side focused libraries. He was part of the design and implementation of Swift’s structured concurrency and actor model, as well as the distributed actors language feature and cluster library. Currently he's focused on Swift/Java interoperability efforts. Previously, he worked on Akka at Lightbend/Typesafe, where he maintained core pieces of the ecosystem, including the clustering, event sourcing, streaming and HTTP libraries. He also is a Java Champion and made significant contributions to the reactive-streams specification and TCK which later became the foundation of the JDK’s java.util.concurrent.Flow types." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "KonradはAppleのSwift言語チームで、並行処理や分散モジュール、サーバーサイド向けライブラリの開発に取り組んでいます。Swiftの構造化並行処理やアクターモデル、分散アクターの言語機能やクラスタライブラリの設計・実装に携わりました。現在はSwiftとJavaの相互運用性の向上に注力しています。以前はLightbend/TypesafeでAkkaの開発に従事し、クラスタリング、イベントソーシング、ストリーミング、HTTPライブラリなどの中核部分を担当していました。また、Java Championとして、後にJDKの java.util.concurrent.Flow 型の基盤となったリアクティブストリーム仕様とTCKにも大きく貢献しました。"
          }
        }
      }
    },
    "Krzysztof is shaping the future of Apple platforms with tools adopted by 80K+ teams, from Apple to Disney. 🏆 2x Engineering Emmy winner, co-founder of Pixle, and creator of Foldify & Sourcery for Xcode." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "KrzysztofはAppleプラットフォームの未来を形作るツールを開発しており、これまでにAppleやDisneyを含む8万以上のチームに採用されています。🏆 エンジニアリング・エミー賞を2度受賞しており、Pixleの共同創設者でもあります。また、Xcode用のFoldifyやSourceryのクリエイターでもあります。"
          }
        }
      }
    },
    "Laptops with the latest stable Xcode and building the Swift compiler is preferred. Instruction will be provided beforehand." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "最新の安定版Xcodeを搭載したラップトップを用意してください。事前にSwiftコンパイラをビルドしてくることが推奨されます。そのための指示は事前に提供されます。"
          }
        }
      }
    },
    "Latest Xcode, Unity if needed and Apple Vision Pro (if you have, not required)" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "最新のXcodeを入れてきてください。必要な人はUnityも。Apple Vision Proは必須ではありません。"
          }
        }
      }
    },
    "Learn by Building: A Gentle Introduction to Swift Regex" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "作って学ぶ正規表現 -やさしいSwift Regex入門-"
          }
        }
      }
    },
    "Learning Swift's Type Inference" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Swiftの型推論を学ぼう"
          }
        }
      }
    },
    "Let's learn about Apple's newest framework TabletopKit for visionOS! You will learn what is TabletopKit and how you can get started using it to build games for visionOS. We'll review the basics of the framework and what it gives you, as opposed to building a game without it. We'll then explore how we would build Monopoly using TabletopKit. No visionOS experience is necessary for getting started! By the end of the talk you'll be able to begin building your own tabletop games." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Appleの最新フレームワーク、visionOS向けTabletopKitについて学びましょう！\nこのセッションでは、TabletopKitとは何か、そしてそれを使ってvisionOS向けのゲームをどのように構築できるかを理解します。\nフレームワークの基本機能と、それを活用することで得られるメリット（従来の方法でゲームを作る場合との違い）についても解説します。\nさらに、TabletopKitを使用してモノポリーをどのように構築するかについて探求します。\nvisionOSの経験がなくてもすぐに始められる内容です！\nトークの最後には、自分自身のテーブルトップゲームを作り始めるための基礎が身につくでしょう。"
          }
        }
      }
    },
    "Let's start!" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "いよいよ始まりますよ！"
          }
        }
      }
    },
    "Let's Table That: Creating Games with TabletopKit for visionOS" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "visionOS向けTabletopKitでゲームを作ろう\n"
          }
        }
      }
    },
    "Leverage hand tracking in Apple Vision Pro to build a SwiftUI window that operates like the native visionOS SystemOverlay. Invoke and manipulate windows intuitively in 3D space, creating a touch-like UI. We present a new interface for spatial computing." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Apple Vision Pro のハンドトラッキング機能を活用して、ネイティブの visionOS SystemOverlay のように動作する SwiftUI ウィンドウを構築します。\n3D空間で直感的にウィンドウを呼び出し、操作することで、タッチ操作に近いユーザーインターフェースを実現します。\nこれにより、空間コンピューティング向けの全く新しいインターフェースを提案します。"
          }
        }
      }
    },
    "Live coding a streaming ChatGPT proxy with Swift OpenAPI—from scratch!" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Swift OpenAPIを使ったライブコーディング ― ゼロから構築するストリーミングChatGPTプロキシ\n"
          }
        }
      }
    },
    "Localizing your app into other languages can unlock a huge amount of growth potential for your app. But as an indie developer, I don’t have time to spare and don’t have others I can rely on to do the work involved in maintaining a high quality localization. So, I rely heavily on automation to minimize the work associated with maintaining 8 different high-quality localizations in my app Nihongo.\n\nIn this talk, I’ll discuss what aspects of localization I entrust to professional translators, what I use machine translation for, and what I use crowdsourcing from social media for. I’ll discuss techniques for automating various aspects of the localization process, including (1) generating screenshots of strings for providing context to translators and validating their translations, (2) generating app store screenshots, including marketing copy in multiple languages, (3) generating meaningful release notes in multiple languages, and (4) verifying app layout and correctness in multiple languages." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "他言語へのアプリローカライゼーションは、アプリの成長潜在力を大きく解放することができます。しかし、インディーデベロッパーとして、時間に余裕がなく、高品質なローカライゼーションを維持するための作業を他人に任せることもできません。そのため、私は自分のアプリ「Nihongo」で8種類の高品質ローカライゼーションを維持する作業を最小限に抑えるために、自動化に大きく依存しています。\n\nこのトークでは、ローカライゼーションのどの側面をプロの翻訳者に委ね、どの側面を機械翻訳に使用し、どの側面をソーシャルメディアからのクラウドソーシングに使用するかについて話します。翻訳者へのコンテキスト提供とその翻訳の検証のための文字列のスクリーンショット生成、複数言語のマーケティングコピーを含むアプリストアスクリーンショットの生成、複数言語での意味のあるリリースノートの生成、および複数言語でのアプリレイアウトと正確性の検証など、ローカライゼーションプロセスの様々な側面を自動化する技術について議論します。"
          }
        }
      }
    },
    "Lunch" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "昼食"
          }
        }
      }
    },
    "Lux Optics builds popular, award-winning photography and video apps, such as Halide, Kino, and Spectre. Let's dive into engineering principles that guide development, such as short feedback loops, avoiding technical sink-holes, and approach problems from a scientific perspective." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Lux Opticsは、Halide、Kino、Spectreなどの人気かつ受賞歴のある写真・動画アプリを開発しています。\nこのトークでは、短いフィードバックループの確立、技術的な落とし穴の回避、そして科学的視点から問題に取り組むといった、開発を支えるエンジニアリング原則について探求します。"
          }
        }
      }
    },
    "Macro testing" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "マクロをテストする"
          }
        }
      }
    },
    "Macros are little compiler plugins that allow us to extend the Swift language in ways that do not require going through Swift evolution, or waiting for a Swift core team member to implement the feature, or require us learning C++ so that we can try implementing the feature ourselves. It is an incredibly powerful new feature, but can also be incredibly complex to get right. Let's explore how to debug and test every aspect of macros, from the code they expand to, to the errors and warnings and fix-its they emit." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "マクロは、Swiftの進化を経ず、Swiftコアチームのメンバーが機能を実装するのを待たず、または自分で機能を実装するためにC++を学ぶ必要がないように、Swift言語を拡張することを可能にする小さなコンパイラプラグインです。これは非常に強力な新機能ですが、正しく行うには非常に複雑になることもあります。マクロが展開するコード、発生するエラーや警告、修正提案など、マクロのすべての側面をデバッグしてテストする方法を探りましょう。"
          }
        }
      }
    },
    "Marcin is a developer with extensive experience. He currently works at Judo.app, where he is building an interface builder for SwiftUI. Marcin has published numerous iOS/macOS libraries and tools, including CryptoSwift, ObjectivePGP, and the Online Swift Playground, which allows for interactive Swift code execution from a web browser. He is currently on a mission to ship SwiftStudio.app, an independent third-party IDE for Swift." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Marcinは豊富な経験を持つ開発者である。彼は現在Judo.appで働いており、SwiftUIのインターフェースビルダーを構築している。Marcinは、CryptoSwift、ObjectivePGP、WebブラウザからインタラクティブなSwiftコードの実行を可能にするOnline Swift Playgroundなど、数多くのiOS/macOSライブラリやツールを公開している。彼は現在、Swift用の独立したサードパーティIDEであるSwiftStudio.appを出荷する使命を帯びている。"
          }
        }
      }
    },
    "Migrating Large Codebases Without Breaking The World" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "平和に大規模なコードベースを移行する方法"
          }
        }
      }
    },
    "Mikaela Caron is an independent iOS Engineer who actively shares her expertise on social media, focusing on iOS development, building apps in public, and freelancing. She's continuing to work on her indie app Fruitful, which helps people connect with others at conferences, while also traveling as much as she can. She's also an organizer for iOSDevHappyHour and loves giving back to the community." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Mikaela Caronは、iOS開発、アプリの公開開発、フリーランスに関する知識をSNSで積極的に発信している独立系iOSエンジニアです。現在は、カンファレンスでの交流をサポートするインディーアプリ『Fruitful』の開発を続けながら、できる限り多くの場所を旅しています。また、iOSDevHappyHourのオーガナイザーを務めるなど、コミュニティへの貢献も大切にしています。"
          }
        }
      }
    },
    "Most people know my dad, Paul, but I've been building apps with SwiftUI for three years now and want to share what I've learned. I like manga, go karting, and coding, but I spend most of my time looking after my dogs." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "多くの人は私の父、Paulを知っていると思いますが、私はSwiftUIを使ったアプリ開発を3年間続けていて、学んだことを皆さんと共有したいと思っています。漫画やゴーカート、コーディングが好きですが、ほとんどの時間は愛犬のお世話をしています。"
          }
        }
      }
    },
    "Nick is a veteran developer, author and open source aficionado, and has been developing iOS apps since the dark ages of manual memory management back in 2009. He is known for various open source projects such as SwiftFormat, Euclid, Expression and iCarousel. When Nick isn't writing parsers in (and for) Swift, he likes to tinker with 3D graphics and even sometimes fancies himself as a games developer." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "NickはiOSアプリ開発に2009年のメモリ管理が手動だった時代から携わるベテラン開発者であり、著者でもあります。SwiftFormat、Euclid、Expression、iCarouselといったオープンソースプロジェクトで知られています。Swiftでパーサーを書いていないときには、3Dグラフィックスに取り組んだり、ゲーム開発者気分を楽しんだりしています。"
          }
        }
      }
    },
    "Noah is a software engineer from Los Angeles. He co-founded Emerge Tools in 2020 after spending 5 years working on Airbnb's iOS app and backend. He's passionate about mobile developer tools that reduce the complexity of apps and make them faster. Outside of building dev tools, he researches systems for machine learning as a PhD student. When he's not staring at a screen, Noah can be found in the water perfecting his strokes or on the trail working through a list of mountain peaks." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Noahはロサンゼルス出身のソフトウェアエンジニアです。AirbnbでiOSアプリとバックエンドの開発に5年間携わった後、2020年にEmerge Toolsを共同設立しました。モバイルアプリの複雑さを軽減し、高速化する開発ツールに情熱を注いでいます。開発ツール作り以外では、機械学習システムの研究に取り組む博士課程の学生でもあります。画面に向かっていないときは、水中で泳ぎの技術を磨いたり、山頂リストを達成するためにトレイルを歩いたりしていることが多いです。"
          }
        }
      }
    },
    "Office hour %@" : {
      "extractionState" : "manual",
      "localizations" : {
        "en" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Office hour with %1$@"
          }
        },
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Q&A"
          }
        }
      }
    },
    "Office hour description %@" : {
      "extractionState" : "manual",
      "localizations" : {
        "en" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Meet %1$@ and ask questions about the talk. This is a great opportunity to get more insights and learn more about the topic."
          }
        },
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "%1$@さんに会って、トークについて質問しましょう。これは、さらに洞察を得て、トピックについてより深く学ぶ絶好の機会です。"
          }
        }
      }
    },
    "Opening Remarks" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "開会の挨拶"
          }
        }
      }
    },
    "Osama is an iOS engineer at Classmethod in Japan, and He’s also a breakdancer who came in second place at the World Breakdancing Championship in Germany in 2007. In the world, He often go by the name ‘Lil Ossa’. He has a passion for both beer and dance, as well as creating iOS apps. He loves sharing his unique iOS development experiences at conferences, including Swiftable 2023 and iOSDC Japan 2022." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "日本のクラスメソッドに所属するiOSエンジニアであり、2007年にドイツで開催されたブレイクダンス世界選手権で2位となったブレイクダンサーでもある。世界では「リル・オッサ」の名で呼ばれることが多い。ビールとダンス、そしてiOSアプリの開発に情熱を注ぐ。Swiftable 2023やiOSDC Japan 2022などのカンファレンスで、自身のユニークなiOS開発経験を共有するのが大好き。"
          }
        }
      }
    },
    "Parallel Socket Communication in Swift" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Parallel Socket Communication in Swift"
          }
        }
      }
    },
    "Paul is the author of Hacking with Swift, Pro Swift, Swift Design Patterns, Testing Swift, Swift Coding Challenges, and more. Suffice it to say, he quite likes Swift. And coffee. (But mostly Swift.) (And coffee.)" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "ポールは『Hacking with Swift』、『Pro Swift』、『Swift Design Patterns』、『Testing Swift』、『Swift Coding Challenges』などの著者です。言うまでもなく、彼はSwiftとコーヒーが大好きです。"
          }
        }
      }
    },
    "Paul is the author of Hacking with Swift, Pro Swift, Swift Design Patterns, Testing Swift, Swift Interview Challenges, and more. Suffice it to say, he quite likes Swift. And coffee. (But mostly Swift.) (And coffee.)" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Paulは「Hacking with Swift」「Pro Swift」「Swift Design Patterns」「Testing Swift」「Swift Interview Challenges」などの著者です。簡単に言うと、Swiftが大好きです。そしてコーヒーも。（でも主にSwiftが。）（いや、コーヒーも同じくらい。）"
          }
        }
      }
    },
    "Peer Labs is your chance to get hands on with things you learned from try! Swift presentations, discuss any issues with the speakers, connect with your peers, work on open source projects, organize impromptu learning sessions and more! Peer labs do not have a strict structure, and are open-ended instead. It is what you and your peers make of it! We will ask everyone to introduce themselves in the beginning, and then it is up to you to ask questions and work together with others on projects that interest you." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "もくもく会は、あなたがtry.Swiftのプレゼンテーションで学んだことを実践するチャンスです！Swiftのプレゼンテーション、スピーカーとのディスカッション、仲間との交流、オープンソースプロジェクト、即席の学習セッションなどなど！もくもく会には厳密な構成はなく、色々なことができます。みなさんで作るものです！はじめに全員に自己紹介をしてもらい、その後、質問をしたり、興味のあるプロジェクトに一緒に取り組んだりするのはあなた次第です。"
          }
        }
      }
    },
    "Please enjoy the meal and have a chat with other attendees." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "お弁当を楽しんだり、他の参加者とおしゃべりしましょう。"
          }
        }
      }
    },
    "Prioritizing Health: Developing a Personalized App" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "健康第一！自分専用の個人アプリ開発"
          }
        }
      }
    },
    "Raymarching Shaders with SwiftUI" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "SwiftUIでレイマーチングシェーダー\n\n"
          }
        }
      }
    },
    "Registration" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "受付"
          }
        }
      }
    },
    "Rendering beautiful text using MSDFs and Metal." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "MSDFとMetalを用いた美しいテキストレンダリング"
          }
        }
      }
    },
    "Requirements" : {
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "必要なもの"
          }
        }
      }
    },
    "Ryota Motonishi is an iOS engineer at LY Corporation. He is working on the development of the LINE chat app. In his free time, he enjoys singing karaoke." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Ryota Motonishiは、LY CorporationのiOSエンジニアです。現在、LINEチャットアプリの開発に携わっています。余暇にはカラオケを楽しんでいます。"
          }
        }
      }
    },
    "S_Shimotori is an iOS application engineer. After work, I prepare for conferences, and on my days off, I enjoy playing games and eating out." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "iOSアプリエンジニアです。終業後はカンファレンスの準備を、休日はゲームと食べ歩きをしています。"
          }
        }
      }
    },
    "Saleem is currently a Software Engineer at The Browser Company and a member of the Swift core team. He has worked at Google, Facebook, and Microsoft in the past. His interests lie in systems, and has worked on compilers and programming languages for over a decade, with some embedded systems thrown in. While currently focused on cross-platform Swift, primarily on Windows, he has ported Swift to Android and Windows amongst other environments." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Saleemは現在、The Browser Companyのソフトウェアエンジニアで、Swiftコアチームのメンバーです。過去にはGoogle、Facebook、Microsoftで働いていた経験があります。彼の興味はシステムにあり、10年以上コンパイラとプログラミング言語に携わり、組み込みシステムにも携わってきました。現在は、主にWindows上のクロスプラットフォームSwiftに注力していますが、SwiftをAndroidやWindowsに移植した経験もあります。"
          }
        }
      }
    },
    "Satoshi is a software engineer living in Tokyo, Japan.\nHe works for CyberAgent in a photography studio that enables virtual production.\nHe is also working on \"the visionOS 30 Days Development Challenge\" and a virtual camera implementation, and uploading the results to GitHub.\nHe loves ARKit and has recently pursued visionOS development and looks forward to a society where Vision Pro is widely used." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "東京在住のソフトウェアエンジニアです。\nサイバーエージェントに所属しており、バーチャルプロダクションを実現する撮影スタジオで働いています。\nvisionOS 30 Days 開発チャレンジや仮想カメラ実装などGitHubにアップしています。\nARKitが大好きで、最近はvisionOSの開発を追求中です。\nVision Proが普及した社会が楽しみですね。"
          }
        }
      }
    },
    "Schedule" : {
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "スケジュール"
          }
        }
      }
    },
    "Searching for Aliens" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "宇宙人を探して"
          }
        }
      }
    },
    "Sebastiaan is an ex-Apple designer now making camera apps like Halide, Kino and Spectre at Lux" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Sebastiaanは元Appleのデザイナーで、現在はLuxでHalide、Kino、Spectreといったカメラアプリを開発しています。"
          }
        }
      }
    },
    "SF Symbols 5 offers 5,000+ symbols, simplifying icon creation. But we often overlook many SF Symbols.\n\nJoin us on a journey fusing SwiftUI, SF Symbols, and Art. Unlock tips to use SF Symbols creatively. Discover the SF Symbols mastery even Apple didn't foresee. Explore unique symbols with us." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "SF Symbols 5には5,000以上のシンボルがあり、アイコン作成が簡単になりました。しかし、多くのSF Symbolsが見落とされています。\n\nSwiftUI、SF Symbols、そしてアートを融合させた旅にご参加ください。SF Symbolsを創造的に使うためのヒントをお伝えします。Appleも予想しなかったSF Symbolsの使い方を発見しましょう。一緒にユニークなシンボルを探索しましょう。"
          }
        }
      }
    },
    "Shinichiro is a software engineer and works on improvements of DevOps and DevEx in various teams. He also contributes some open-sourced swift projects." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "レゴとSwiftが好きなプログラマ。iOSエンジニアとしてフリマアプリ「メルカリ」の立ち上げに参画し、現在は独立してプログラミング教育分野で活動中。iOSアプリ「Boost Remote」「Scrub」の作者。著書に『入門LEGO MINDSTORMS NXT 第2版 レゴブロックで作る動くロボット』(毎日コミュニケーションズ)など。"
          }
        }
      }
    },
    "Si works at Apple, where he helps maintain a number of open-source Swift libraries to support server-side use cases. Before that, he's worked in a wide range of areas including virtulalization, cloud technologies, privacy-preserving machine learning, and developer tools. \n\nSi is based in Cambridge, UK, but loves to travel and see new places. He's hugely passionate about coffee and enjoys playing bass guitar." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "SiはAppleで働いており、サーバーサイドでの利用を支援するために、複数のオープンソースのSwiftライブラリの維持に携わっています。以前は、仮想化、クラウド技術、プライバシー保護機械学習、開発者向けツールなど、幅広い分野での経験を積んできました。\n\n現在はイギリスのケンブリッジを拠点に活動していますが、旅行をして新しい場所を訪れるのが大好きです。コーヒーには強い情熱を持っており、ベースギターを弾くのも楽しんでいます。"
          }
        }
      }
    },
    "Sign in with Luma and show QR code of your ticket at the reception." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "LumaにログインしてQRコードを掲示してください。"
          }
        }
      }
    },
    "Skip is an innovative tool that transforms Swift code for Android with native performance. Evolving from transpiling Swift to Kotlin, it now runs compiled native Swift on Android. In 5 minutes, discover Skip's fundamentals, architecture, and its advantages over React Native and Flutter!" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Skipは、SwiftコードをAndroid向けに変換し、ネイティブパフォーマンスを実現する革新的なツールです。\n元々はSwiftからKotlinへのトランスパイルとして進化してきましたが、現在はAndroid上でコンパイルされたネイティブSwiftを実行します。\n5分間のセッションで、Skipの基本原理、アーキテクチャ、そしてReact NativeやFlutterに対する優位性についてご紹介します。"
          }
        }
      }
    },
    "Software Engineer at DeNA Inc., specializing in mobile development for live streaming applications. With extensive experience in iOS development since the Objective-C era, I am passionate about leveraging Swift's evolution to create innovative and efficient applications." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "株式会社ディー・エヌ・エーのソフトウェアエンジニアとして、ライブストリーミングアプリのモバイル開発を担当しています。\nObjective-Cの時代からiOS開発に長年携わり、Swiftの進化を活かして革新的で効率的なアプリ開発に情熱を注いでいます。"
          }
        }
      }
    },
    "Software Engineer at newmo, Inc." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "newmo, Inc.のソフトウェアエンジニア"
          }
        }
      }
    },
    "Software superstar. Stuttering stud. Lead maintainer of fastlane tools." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "ソフトウェア界のスーパースター。fastlaneツールのリード・メンテナー"
          }
        }
      }
    },
    "Sometimes Swift developers make fun of languages such as JavaScript that have vague concepts like \"truthy\" and \"falsy\", but Swift is packed with its own surprises and has plenty sharp edges of its own.\n\nIn this talk I want to show some of the surprising behaviors of Swift – things that behave weirdly, traps you can easily fall into, and fixes to help you write better code. There will be lots of hands-on code samples everyone can try, and it will be a fun journey through the quirks of a language we all think we know." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Swift開発者の中には、JavaScriptの「truthy」や「falsy」といった曖昧な概念を冗談交じりに笑う人もいますが、実はSwiftにも独自の驚きが満載で、予想外の鋭い側面が存在します。\n\nこのトークでは、Swiftの驚くべき挙動―奇妙な動作、簡単に陥ってしまう落とし穴、そしてより良いコードを書くための修正策―を紹介します。多数のハンズオンコードサンプルを用意しており、参加者全員が実際に試しながら、普段は馴染みのあるはずのこの言語の意外な一面を楽しく探求する旅に出かけましょう。"
          }
        }
      }
    },
    "Special effects with SwiftUI Text" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "SwiftUI Textを使った特殊効果\n"
          }
        }
      }
    },
    "Stephen entered tech by way of a liberal arts degree. He now works on Point-Free with Brandon Williams, where he tries to spread the word of testable, composable app development." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Stephenは、リベラルアーツの学位から技術者の道に進みました。現在はBrandon WilliamsとともにPoint-Freeに携わり、テスト可能でコンポーザブルなアプリ開発の普及に努めています。"
          }
        }
      }
    },
    "Swift boasts a powerful language feature known as type inference, which is crucial for balancing a safe type system with ease of coding. \nUnderstanding how this essential feature is implemented can aid in writing better code. \n\nIn this talk, I will explain the workings of Swift's type inference, including the fundamental algorithm that allows bidirectional propagation of type information for code, and how it's extended to accommodate language features like overloading. \nThis will help understand why compiling code can become overly burdensome and result in errors. \nI will also cover interesting related topics such as overload priority, simultaneous inference in multiple statements, and the challenges of protocol compliance determination.\n\nAdditionally, methods for directly observing the behavior of type inference using compiler options will be introduced, paving the way for further deepening your understanding." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Swiftには型推論という素晴らしい言語機能があります。これは安全な型システムとコードの書きやすさを両立させるために重要です。\nそのような重要な機能がどのように実現されているのか理解することは、良いコードを書くことに役立つでしょう。\nそこでこの発表では、Swiftの型推論の動作について解説します。\n型推論の基本となる、コードに対して双方向から型情報の伝搬を可能にするアルゴリズムを説明し、さらにオーバーロードなどの言語機能に対応するための拡張方法に触れます。これにより、コードのコンパイルが重すぎてエラーが出てしまう理由がわかるでしょう。\nオーバーロード優先度、複数文の同時推論、プロトコル準拠判定の難しさなど、関連する興味深いトピックも紹介します。\nまた、コンパイラオプションを利用して、型推論の動作を直接観察する方法を紹介します。この先も更に理解を深めていくことができるようになるでしょう。"
          }
        }
      }
    },
    "Swift is a fantastic general purpose language, which can and has been successfully used beyond its mobile origins, from embedded through server-side systems. One of Swift's unique strengths is its powerful native language interoperability with C and C++. Recently, the Swift project started work on integrating improved Swift/Java interoperability with the use of both JNI and the new Foreign Function and Memory APIs introduced in JDK22. In this talk we'll deep dive into the deep integration approach taken between the language runtimes using the FMM APIs and their unique strengths but also challenges." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Swiftは、モバイル発祥に留まらず、組み込みシステムからサーバーサイドに至るまで幅広く活用される素晴らしい汎用言語です。\nその独自の強みのひとつとして、CやC++との強力なネイティブな言語相互運用性が挙げられます。\n最近、Swiftプロジェクトでは、JNIとJDK22で導入された新しいForeign Function and Memory APIsを活用し、SwiftとJava間の相互運用性の向上に取り組み始めました。\nこのトークでは、FMM APIを利用した言語ランタイム間の深い統合アプローチに迫り、そのユニークな強みと同時に直面する課題について詳しく解説します。"
          }
        }
      }
    },
    "Swift is cool but... do you know what's cooler? Successfully code signing your Swift apps. Code signing issues can certainly be scary but they can be really fun to solve! This talk will teach you how to take a step back from scary code signing errors to calmly and quickly code sign your apps." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Swiftはかっこいいですけど、もっとかっこいいのは何だと思いますか？それは、Swiftアプリをコード署名できることです。コード署名の問題って本当に頭が痛いものですが、解決する過程は意外と楽しいんですよ！この話では、コード署名のエラーに怖がらず、冷静にそして素早くアプリをコード署名する方法をお教えします。"
          }
        }
      }
    },
    "Swift Programming in Japanese" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "日本語でのSwiftプログラミング"
          }
        }
      }
    },
    "Swift WTF: Weirdness, traps, and fixes" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Swift WTF: 奇妙な挙動、落とし穴、そして修正策"
          }
        }
      }
    },
    "Swift's regex engine is an ambitious project aiming to be a superset that encompasses all existing regular expressions. However, as of now, many features, such as lookbehind, remain unimplemented.\n\nContributing to this project can be challenging due to the complexity of the existing codebase.\n\nIn this talk, we will implement a small regex engine in Swift, focusing on the three fundamental operations: concatenation, alternation, and repetition. We will also explore how to implement a backtracking (VM-based) approach similar to Swift's official regex engine.\n\nBy understanding this implementation, you'll take the first step toward deciphering Swift's official regex engine and contributing to its development." : {
      "extractionState" : "manual",
      "localizations" : {
        "en" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Swift's regex engine is an ambitious project aiming to be a superset that encompasses all existing regular expressions. However, as of now, many features, such as lookbehind, remain unimplemented.\n\nContributing to this project can be challenging due to the complexity of the existing codebase.\n\nIn this talk, we will implement a small regex engine in Swift, focusing on the three fundamental operations: concatenation, alternation, and repetition. We will also explore how to implement a backtracking (VM-based) approach similar to Swift's official regex engine.\n\nBy understanding this implementation, you'll take the first step toward deciphering Swift's official regex engine and contributing to its development."
          }
        },
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Swiftの正規表現は、既存のあらゆる正規表現を包含するスーパーセットを目指す壮大なプロジェクトです。\nしかし、現時点では「後読み」など未実装の機能も多く存在します。そこで自分でプロジェクトに貢献しようと思っても既存のコードベースの理解は容易ではありません。\n本講演では、「連接」「選択」「繰り返し」の基本三演算に限定した小さな正規表現エンジンをSwiftで実装し、Swiftの正規表現エンジンと同様のバックトラック方式（VM型）の実装方法を解説します。\nこれにより公式の実装を読み解いたり、機能の拡張へ貢献するための第一歩を踏み出せるようになります。"
          }
        }
      }
    },
    "SwiftSyntax is Apple's library for parsing and manipulating Swift code. It can be use for anything from formatting source code (as in swift-format) to generating it (as in Swift Macros). In this talk I'll explain how the SwiftSyntax library works - the range and limitations of its capabilities, and demonstrate some cool use cases that you might not have considered." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "SwiftSyntaxは、Swiftコードの解析や操作を行うためのApple純正ライブラリです。\nこのライブラリは、ソースコードのフォーマット（swift-formatの場合）から、コード生成（Swift Macrosの場合）に至るまで、幅広い用途で活用できます。\n本セッションでは、SwiftSyntaxライブラリの動作原理、その機能範囲や制約について解説し、思いもよらなかったクールな活用事例をいくつかご紹介します。"
          }
        }
      }
    },
    "SwiftSyntax: for good and evil" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "SwiftSyntax: evalの力、善にも悪にも"
          }
        }
      }
    },
    "SwiftUI API Design Lessons: Bridging Procedural APIs with the Declarative World" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "SwiftUI APIデザインの教訓: 手続き型APIと宣言型世界の橋渡し"
          }
        }
      }
    },
    "SwiftUI APIs are inherently declarative, yet many existing Apple platform APIs are designed to be used in a procedural manner. In this session, we'll explore how to design and implement SwiftUI-friendly declarative APIs that integrate with procedural frameworks. Using AVFoundation as an example, we will build a photo and video capture app while uncovering best practices for adapting procedural APIs to the declarative paradigm of SwiftUI." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "SwiftUIのAPIは本質的に宣言型ですが、多くの既存のAppleプラットフォームAPIは手続き型として設計されています。\n本セッションでは、手続き型フレームワークと統合可能なSwiftUIフレンドリーな宣言型APIをどのように設計・実装するかを探求します。\n例としてAVFoundationを用い、写真・ビデオキャプチャアプリを構築しながら、手続き型APIをSwiftUIの宣言型パラダイムに適応させるためのベストプラクティスを明らかにしていきます。"
          }
        }
      }
    },
    "SwiftUI's syntax is great for UI, but it can also be used for 3D graphics. We'll combine SwiftUI's elegant syntax with raymarching and signed distance functions to make cool shaders." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "SwiftUIの文法は主にUI作成に優れていますが、実は3Dグラフィックスにも応用可能です。\nこのセッションでは、SwiftUIの洗練されたシンタックスとレイマーチング、さらにはSigned Distance Functionsを組み合わせることで、クールなシェーダーを作成する方法を探求します。"
          }
        }
      }
    },
    "Take a break and meet other attendees or sponsors" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "休憩して他の参加者やスポンサーと交流しましょう"
          }
        }
      }
    },
    "Take a group photo with all attendees and speakers" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "参加者全員と講演者と一緒に集合写真を撮ります"
          }
        }
      }
    },
    "Take a lunch box and meet other attendees or sponsors." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "お弁当を持って、他の参加者やスポンサーと交流しましょう。"
          }
        }
      }
    },
    "Take your iOS app to the next level by integrating 3D content with SwiftUI. Go beyond static models and learn how to add animations, dynamic content ,performance enhancements and interactive elements using RealityKit, creating immersive experiences that set your app apart." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "SwiftUIと連携して3Dコンテンツを取り入れることで、あなたのiOSアプリを次のレベルへと引き上げましょう。\n静的なモデルに留まらず、RealityKitを活用してアニメーション、動的コンテンツ、パフォーマンス向上、そしてインタラクティブな要素を加えることで、他にはない没入型体験を実現する方法を学びます。"
          }
        }
      }
    },
    "Ten Principles of Lux Development" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Lux開発の10原則\n"
          }
        }
      }
    },
    "The Drake Equation, used by astrophysicists to estimate the number of alien civilizations we can communicate with, has many unexpected lessons for our work of building apps. A takeaway from this equation is the huge number of stars in the universe, which implies a high probability that some of them harbor life. This talk will dive into the details of the equation and then apply it to iOS. Just as the number of stars provide a powerful scale factor, there are technical factors of your app that can multiply your impact. We'll derive a new equation to calculate the carbon footprint of an app, look at iOS memory management to speed up every CPU instruction, and calculate how to reduce bugs all using lessons from the Drake Equation. I will also discuss my own experience building a startup and how I think about the implications of these scale factors when designing developer tools that many large apps will use." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "天体物理学者が我々と通信可能なエイリアン文明の数を推定するために用いるドレイク方程式は、アプリ開発においても予想外の教訓を提供してくれます。\nこの方程式が示す一つのポイントは、宇宙に存在する膨大な数の星々が、いずれかに生命を宿している可能性を示唆していることです。\n\nこのトークでは、まず方程式の詳細に踏み込み、その後iOSへの応用方法について解説します。\n星の数が強力なスケールファクターを提供するのと同様に、あなたのアプリにも影響力を増幅させる技術的要因が存在します。\nドレイク方程式の教訓を応用して、アプリのカーボンフットプリントを計算する新たな方程式を導出し、iOSのメモリ管理を見直すことでCPU命令の実行速度を向上させ、さらにはバグを削減する方法についても検討します。\nさらに、私自身のスタートアップ構築の経験を踏まえ、多くの大規模アプリが利用する開発者向けツールを設計する際に、これらのスケール要因が持つ意味についてもお話しします。"
          }
        }
      }
    },
    "The Fascinating World of Addition in Swift" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "なぜSwiftで「1 + 1 = 2」になるのか"
          }
        }
      }
    },
    "The Future of C++ Interoperability: Insights from Porting a Game to Swift" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "ゲームのSwift移植から見えたC++ interoperabilityの展望"
          }
        }
      }
    },
    "The reason why I'd like to give this talk is because as someone who works as both an iOS/Mac developer and a security researcher, I've learned that there's a lot that the developer community can contribute to security research on Apple's platforms, but most developers think that it's a niche outside their area of expertise. However, most professional security researchers focus at the low level where app developers don't usually have a lot of knowledge.\n\nThrough my work, I've found quite a few security bugs in Mac and iOS that could be found at the higher level, and those bugs have rewarded me with multiple bug bounty payments from Apple as well as helping improve the security of the operating systems. This talk would be a way to introduce more developers to the practice, with some examples of my past experiences, and encourage them to pursue security research as part of their career. You can read about some of my security research work on my blog.\n\nI think this fits well as both an inspirational and technical topic that's not usually covered in developer conferences." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "私自身、iOS/Macの開発者でありながらセキュリティリサーチャーとしても活動してきた経験から、Appleプラットフォームにおけるセキュリティリサーチに、開発者コミュニティが大いに貢献できることを学びました。しかし、多くの開発者はこの分野を自分の専門外のニッチなものと捉えがちです。一方で、プロのセキュリティリサーチャーは、アプリ開発者があまり触れない低レベルの部分に注力する傾向にあります。\n\n私のこれまでの活動では、MacやiOSの上位レベルで発見可能なセキュリティ脆弱性をいくつか見つけ、その結果としてAppleから複数のバグバウンティ報奨金を得るとともに、OSのセキュリティ向上にも寄与してきました。このトークでは、私の過去の経験を交えながら、より多くの開発者がセキュリティリサーチの実践に触れるきっかけを提供し、キャリアの一環として挑戦することを後押しします。詳しい事例は私のブログでも紹介しています。\n\nこの内容は、技術的な側面とインスピレーショナルな視点の両方を兼ね備え、開発者カンファレンスではあまり取り上げられない貴重なトピックだと考えています。"
          }
        }
      }
    },
    "This talk will take you through a handful of topics that either make a big or a small win for you or your application, mostly with the new iOS, SwiftUI and Xcode features. Want to give your app some extra sparkle? Let's chat about cool shortcuts, playful animations, and the new tricks from SwiftUI 5 like observation framework, enhanced phased animations, updates to scrollview and new gestures. Come join this session and take home some big and small wins with you." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "この講演では、新しいiOS、SwiftUI、そしてXcodeの特徴を活用して、あなたやアプリにとっての成果や進歩を促す様々なテーマを紹介します。アプリをさらに魅力的にしたいですか？便利なショートカット、楽しいアニメーション、SwiftUI 5から導入された新機能、例えばObservationフレームワーク、進化した段階的アニメーション、スクロールビューの更新、新しいジェスチャーなどについて話し合います。このセッションに参加し、あなたのアプリ開発に役立つヒントや知識を得てください。"
          }
        }
      }
    },
    "Tim is a Swift developer from Manchester, UK and part of the Vapor Core Team. He's part of the server-side Swift team at Kodeco and has written the unofficial-official book on Vapor with the founders of the framework. He founded Broken Hands a few years ago and delivers talks and workshops on Vapor and server-side Swift around the world. He also co-organises the ServerSide.swift conference - the world’s first and only conference focused on server-side Swift." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Tim はイギリス、マンチェスター出身の Swift 開発者で、Vapor コアチームの一員です。彼はKodecoのサーバーサイドSwiftチームの一員であり、フレームワークの創設者たちと共にVaporの非公式公式本を執筆している。数年前にBroken Handsを設立し、VaporとサーバーサイドSwiftに関する講演やワークショップを世界中で行っている。また、ServerSide.swiftカンファレンス（サーバーサイドSwiftに焦点を当てた世界初で唯一のカンファレンス）を共同主催している。"
          }
        }
      }
    },
    "Transforming Language Learning with AI: A Deep Dive into Duolingo’s AI Tutor" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "AIによる言語学習の変革：DuolingoのAIチューターを深掘る"
          }
        }
      }
    },
    "Unique to Apple Vision Pro! How to Start Developing Spatial Apps" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Apple Vision Proならでは！ 空間アプリ開発の始め方"
          }
        }
      }
    },
    "Unlock the Potential of Swift Code Generation" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Swiftコード生成の可能性を解き放て\n"
          }
        }
      }
    },
    "Unlock the secrets of SwiftUI performance! Dive into the render loop and discover techniques like offscreen rendering to manipulate it. Gain practical insights into how SwiftUI views are rendered and learn powerful ways to optimize them. Transform your apps with smoother and more efficient UI." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "SwiftUIのパフォーマンス向上の秘密を解き明かしましょう！\nレンダーループに深く切り込み、オフスクリーンレンダリングなどのテクニックを駆使して、ビューのレンダリングプロセスを自在に操作する方法を探ります。\nSwiftUIビューがどのように描画されるのか、実践的な洞察を得るとともに、最適化のための強力な手法を学び、より滑らかで効率的なUIへとアプリを変革するヒントを提供します。"
          }
        }
      }
    },
    "Unlocking SwiftUI Performance: Mastering the Render Loop and Offscreen Rendering" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "SwiftUIパフォーマンスを解き放つ: レンダーループとオフスクリーンレンダリングの極意\n"
          }
        }
      }
    },
    "Unlocking the Boundless Potential of SF Symbols, \"The Artistic World of SF Symbols\"" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "SF Symbolsの芸術的世界：限りない可能性を解き放つ"
          }
        }
      }
    },
    "Using the Accessibility API in macOS allows you to access and manipulate UI elements of other applications and retrieve the content displayed. This presentation will introduce methods to add assistant features such as autocomplete and translation to existing applications by utilizing this functionality. We will discuss the application of the Accessibility API to enhance applications, including practical examples." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "macOSのAccessibility APIを利用すると他のアプリケーションのUI要素にアクセスして操作したり表示されているコンテンツを取得できます。この機能を用いて既存のアプリケーションに自動補完や翻訳機能などのアシスタント機能を追加する方法を紹介します。Accessibility APIのアプリケーションを拡張するための応用について、実例を交えて説明します。"
          }
        }
      }
    },
    "Vapor has undergone a large number of significant changes over the last few years. The bio of Swift Concurrency, Sendable and rewriting the internals to use new async foundations have all posed big problems as we've had to migrate and adapt without breaking anything, continuing to ship and keeping our API stable! In this talk we'll go through some war stories of these migrations and learn some practical steps that you can use in your codebase to make big changes without grinding to a halt or breaking everything. \nThis talk is applicable to all Swift developers, whether writing libraries, iOS applications or even server apps!" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Vaporはここ数年で大きな変化を遂げてきました。Swiftの並行処理やSendableの導入、内部の書き直しによる新しい非同期基盤の使用など、これらの変更はすべて、何も壊さずに移行し、適応し、引き続き安定したAPIを提供し続けるという大きな課題をもたらしました！このトークでは、そんな移行の際の戦いについてのエピソードを共有し、コードベースで大きな変更を行う際の実践的な手順を学びます。このトークは、Swiftの開発者であれば、ライブラリを書いたり、iOSアプリケーションを作成したり、サーバーアプリケーションを開発したりするすべての人に役立つ内容です！"
          }
        }
      }
    },
    "Vincent works at Photoroom and contributes to building great consumer apps. He also enjoys sharing about Swift and iOS on his YouTube channel." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "VincentはPhotoroomで働きながら、優れたコンシューマー向けアプリの開発に携わっています。また、SwiftやiOSに関する情報をYouTubeチャンネルで発信することも楽しんでいます。"
          }
        }
      }
    },
    "Vision Pro × Text to 3D Model: How Swift and Generative AI Unlock a New Era of Spatial Computing" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Vision Pro × Text to 3D Model: Swiftと生成型AIが切り拓く新時代の空間コンピューティング\n"
          }
        }
      }
    },
    "visionOS represents a new paradigm known as Spatial Computing, which is expected to significantly increase the number of experiences available on headset devices. This talk will introduce the basic concepts of visionOS and provide explanations on implementing sample apps using Swift. Given that many may not have developed for visionOS or have experience with SwiftUI or RealityKit, understanding every aspect is not necessary. By learning the basic architecture, you can start implementing spatial applications. The session will cover the process from project creation to operation, with spatial expressions explained through demos and videos. Let's create experiences in Spatial Computing together!" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "visionOSはSpatial Compuingという新たなパラダイムを示しています。\n今後ヘッドセット型端末での体験が数多く提供されてゆくでしょう。\n\nこのトークではvisionOSの基本的な概念の解説をし\nSwiftを使ったサンプルアプリ実装の説明をします。\n\nまだ現時点ではvisionOSでの開発をしたことがない方が多いでしょう。\nSwiftUI、RealityKitの実装経験がない方もまた多いと思います。\n\nすべてを理解する必要はなく、基本的な構成を学習すれば\nあなたも空間的なアプリを実装することができます。\n\nプロジェクト作成から動作までの流れを解説し\n空間的表現をデモと動画で説明します。\n\nSpatial Computingの体験を皆でつくっていきましょう！"
          }
        }
      }
    },
    "We all know Swift is great for buildings apps on iOS, macOS, and other Apple platforms, but it can do so much more. In this talk you'll learn how to leverage result builders to generate HTML, then how to use that as a foundation for building whole websites in Swift." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "SwiftはiOS、macOS、その他のAppleプラットフォームでアプリを構築するのに適していることで知られていますが、それだけではありません。この講演では、Result Builderを利用してHTMLを生成する方法と、それを基盤としてSwiftで完全なウェブサイトを構築する方法について学びます。"
          }
        }
      }
    },
    "We all know that the NS prefix on the Apple platforms comes NextStep. However, until I built an app for NextStep, I did not realize just how much was already there. In this quick talk, I encourage attendees to deepen their knowledge of Objective C and Apple Platforms by stepping back in time to 1996" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "AppleプラットフォームにおけるNSプレフィックスがNextStepに由来することは、誰もが知っています。しかし、私がNextStep向けのアプリを作るまでは、その技術がどれほど充実しているかに全く気づいていませんでした。この短いトークでは、1996年にタイムスリップすることで、Objective-CとAppleプラットフォームに対する理解をさらに深めることを皆さんに提案します。"
          }
        }
      }
    },
    "What Can We Do Without AI in the Future?" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "AIがない未来を考える"
          }
        }
      }
    },
    "What can you do with Path animations in SwiftUI? With some creativity, we can animate text, draw shapes, and more—it's a surprisingly versatile technique. \nIn this talk, I'll showcase innovative ways to use Path animations in development and entertainment, helping you dive into this exciting world." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "SwiftUIのPathアニメーションで、どんなことができるのでしょうか？\n少しの創意工夫で、テキストをアニメーションさせたり、図形を描いたりと、驚くほど多彩な表現が可能です。\nこのトークでは、開発やエンターテインメントの分野においてPathアニメーションを活用する革新的な方法をご紹介し、皆さんをこの刺激的な世界へと誘います。"
          }
        }
      }
    },
    "What makes an app truly exceptional? How do the best designers create interfaces that feel intuitive, delightful, and, most importantly, human? In this talk, Sebastiaan de With pulls back the curtain on Apple's design principles and the craftsmanship behind Halide, an Apple Design Award-winning app. From refining tiny details to making tough design decisions, he'll share real-world insights on creating products that aren't just great—they're loved. Whether you're an aspiring designer or a seasoned developer, jump into a no-nonsense crash course in shipping beautiful, functional apps without getting lost in perfectionism." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "アプリを真に卓越させる要素は何でしょうか？\n最良のデザイナーたちは、どのようにして直感的で魅力的、そして何よりも人間味あふれるインターフェースを生み出しているのでしょうか？\n\nこのトークでは、Seebastiaan de WithがAppleのデザイン原則と、Apple Design Awardを受賞したHalideの背後にある職人技に迫ります。\n細部の洗練から、難しいデザイン判断に至るまで、単に優れているだけでなく、人々に愛される製品を生み出すための実践的な知見を共有します。\n\n新進のデザイナーであれ、経験豊富な開発者であれ、完璧主義にとらわれることなく、美しく機能的なアプリを世に送り出すための、実践的なクラッシュコースにぜひ飛び込んでみましょう。"
          }
        }
      }
    },
    "What's new in iOS 17, 16, 15, etc." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "iOS 17, 16, 15などの新機能"
          }
        }
      }
    },
    "When you have more app or game ideas than time to implement them, AI can help accelerate your workflow, generating code, assets, tests, and documentation. Let's explore the tactics and tooling I used at Nintendo and beyond to prototype game proof-of-concepts and iterate quickly in Swift & SwiftUI!" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "アプリやゲームのアイデアが実装する時間を上回る場合、AIはコード、アセット、テスト、ドキュメントの自動生成を通じて、ワークフローを大幅に加速させます。\n本セッションでは、Nintendoなどで実践したSwiftおよびSwiftUIを活用し、ゲームの概念実証プロトタイプを迅速に構築・反復開発するための戦略とツールについて探求します。"
          }
        }
      }
    },
    "With iPhones continually advancing their camera capabilities, one can capture satisfying photos without the need for a dedicated digital camera. Yet, there exists a niche of individuals who intentionally purchase older digital or film cameras. They are drawn to the unique aesthetic of photos and videos produced by these cameras.\nIn this talk, we'll explore how to achieve such retro-style photos using Swift. While Core Image's documentation offers articles like \"Simulating Scratchy Analog Film,\" implementing these techniques directly into a camera app may not yield the desired retro effect. Therefore, we'll start by reexamining the question, \"What defines a retro-style photo?\" and aim to create the ideal retro aesthetic." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "iPhoneのカメラは進化を続けており、本格的なデジタルカメラを持たなくても満足できる程の写真を撮ることができる。そんな中あえて古めのデジカメやフィルムカメラを購入している層がある。彼らはそうしたカメラで撮れる写真や動画の味わいに惹かれているのである。\nSwiftでそのような写真を生み出すにはどうしたら良いのだろうか。Core Imageのドキュメントに\"Simulating Scratchy Analog Film\"という記事はあるが、その通りに実装したカメラアプリでは思うような「レトロ」が作れない。そもそも「レトロな写真とは何なのか」という問いから再考し、理想の「レトロ」を作ろうと思う。"
          }
        }
      }
    },
    "With over 12 years of experience developing for Apple platforms, I am passionate about creating exceptional user experiences. I have a strong background in UIKit, and these days, I primarily focus on coding SwiftUI views for iOS and tvOS apps. I currently work at Rakuten Viki, a video streaming company with over a million active users per day.\n\nI absolutely love attending conferences and public speaking, sharing my knowledge and learning from the community. Outside of work, you can find me planning my next travel adventure or running around with my 3-year-old." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Appleプラットフォーム向けの開発経験が12年以上あり、優れたユーザー体験を生み出すことに情熱を注いでいます。特にUIKitに精通しており、現在は主にSwiftUIを使ってiOSやtvOSアプリのUIを開発しています。\n現在、1日あたり100万人以上のアクティブユーザーを抱える動画ストリーミング企業Rakuten Vikiに勤務しています。\n\nカンファレンスへの参加や登壇が大好きで、知識を共有したり、コミュニティから学んだりすることに喜びを感じています。仕事以外では、次の旅行の計画を立てたり、3歳の子どもと遊んだりしています。"
          }
        }
      }
    },
    "WWDC24 introduced exciting updates to the Charts API, enabling more creative graph representations. This talk explores how to turn data into art using advanced customization, animations, and interactions. Elevate your data visualization skills and become a graph art designer with Charts API!" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "WWDC24では、Charts APIに画期的なアップデートが導入され、より創造的なグラフ表現が可能になりました。\nこのトークでは、先進的なカスタマイズ、アニメーション、そしてインタラクションを駆使して、データをアートに変える方法をご紹介します。\nデータビジュアライゼーションのスキルを一段と向上させ、Charts APIを使ったグラフアートのデザイナーになりましょう！"
          }
        }
      }
    },
    "Xiangyu works at Duolingo and belongs to Max Immersion team, which develops the GPT-based subscription feature called Roleplay. She develops new improvements and features for Roleplay, mostly on iOS.\nApart from being a full-stack software developer, She enjoys most of my time playing the piano and reading.\nShe loves learning languages. She speaks Chinese and English fluently and is learning French." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "XingyuはDuolingoで働いており、Roleplayと呼ばれるGPTベースのサブスクリプション機能を開発しているMax Immersionチームに所属しています。彼女はRoleplayの新しい改良と機能を、主にiOS上で開発しています。\nフルスタックのソフトウェア開発者であることとは別に、ピアノを弾いたり読書をしたりしています。\n言語を学ぶのも好きです。中国語と英語は流暢に話せますし、フランス語も勉強中です。"
          }
        }
      }
    },
    "You will learn how MESON's launch title for Apple Vision Pro is made with hands-on experience.\n\nWe will also talk a bit about how we develop in Unity (PolySpatial)." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "MESONがリリースしたApple Vision Pro向けローンチタイトルがどのようにしてできているかを、手を動かしながら学べる内容です。\n\nまた、Unity（PolySpatial）でどう開発していくのかを少しだけお話します。"
          }
        }
      }
    },
    "Yuta is a software engineer at Goodnotes, an open-source developer, and a graduate CS student. He has been contributing to Swift / Ruby / LLVM for WebAssembly support." : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Goodnotesのソフトウェアエンジニア、オープンソース開発者、CS大学院生。WebAssemblyをサポートするためにSwift / Ruby / LLVMに貢献している。"
          }
        }
      }
    },
    "Zamzam is a tech lead with deep knowledge in AI and mobile technology, currently advancing her expertise at Veo Technologies in Copenhagen. A movie enthusiast post-work" : {
      "extractionState" : "manual",
      "localizations" : {
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "AIとモバイル技術に深い知識を持つ技術リーダーで、現在はコペンハーゲンのVeo Technologiesで専門知識を深めている。仕事の後は映画愛好家。"
          }
        }
      }
    }
  },
  "version" : "1.0"
}